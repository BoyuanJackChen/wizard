{"task_id": 19, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef test_duplicate(arr):\r\n    \"\"\"\r\n    This function takes an array of integers as input and returns True if any duplicate element is found in the array, else False.\r\n    \"\"\"\r\n    # Create an empty set to store unique elements\r\n    unique_set = set()\r\n    \r\n    # Iterate through the array and add each element to the set\r\n    for num in arr:\r\n        if num in unique_set:\r\n            return True\r\n        else:\r\n            unique_set.add(num)\r\n    \r\n    # If no duplicate element is found, return False\r\n    return False\r\n```\r\n\r\nWe can test the function using the given test cases:\r\n\r\n```python\r\nassert test_duplicate(([1,2,3,4,5]))==False\r\nassert test_duplicate(([1,2,3,4, 4]))==True\r\nassert test_duplicate([1,1,2,2,3,3,4,4,5])==True\r\n```\r\n\r\nThe function works as expected and returns the correct output for all test cases. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find whether a given array of integers contains any duplicate element.\nTest examples:\nassert test_duplicate(([1,2,3,4,5]))==False\nassert test_duplicate(([1,2,3,4, 4]))==True\nassert test_duplicate([1,1,2,2,3,3,4,4,5])==True\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef test_duplicate(arr):\r\n    \"\"\"\r\n    This function takes an array of integers as input and returns True if any duplicate element is found in the array, else False.\r\n    \"\"\"\r\n    # Create an empty set to store unique elements\r\n    unique_set = set()\r\n    \r\n    # Iterate through the array and add each element to the set\r\n    for num in arr:\r\n        if num in unique_set:\r\n            return True\r\n        else:\r\n            unique_set.add(num)\r\n    \r\n    # If no duplicate element is found, return False\r\n    return False\r\n```\r\n\r\nWe can test the function using the given test cases:\r\n\r\n```python\r\nassert test_duplicate(([1,2,3,4,5]))==False\r\nassert test_duplicate(([1,2,3,4, 4]))==True\r\nassert test_duplicate([1,1,2,2,3,3,4,4,5])==True\r\n```\r\n\r\nThe function works as expected and returns the correct output for all test cases. "}
