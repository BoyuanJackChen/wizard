{"task_id": 73, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nimport re\r\n\r\ndef multiple_split(string):\r\n    # Define the regex pattern for multiple delimiters\r\n    pattern = r'[^\\w\\s]+'\r\n    # Split the string using the pattern\r\n    return re.split(pattern, string)\r\n\r\n# Test cases\r\nassert multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']\r\nassert multiple_split('Mi Box runs on the \\n Latest android*which has google assistance and chromecast.') == ['Mi Box runs on the ', ' Latest android', 'which has google assistance and chromecast.']\r\nassert multiple_split('Certain services\\nare subjected to change*over the seperate subscriptions.') == ['Certain services', 'are subjected to change', 'over the seperate subscriptions.']\r\n```\r\n\r\nThe `multiple_split` function takes a string as input and returns a list of strings after splitting the input string using the regex pattern `[^\\w\\s]+`. The pattern matches one or more characters that are not word characters or whitespace characters. This pattern effectively splits the input string on any non-word and non-whitespace characters. The `re.split` function is used to split the input string using the pattern. The function returns the list of strings after splitting the input string. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to split the given string with multiple delimiters by using regex.\nTest examples:\nassert multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']\nassert multiple_split('Mi Box runs on the \\n Latest android*which has google assistance and chromecast.') == ['Mi Box runs on the ', ' Latest android', 'which has google assistance and chromecast.']\nassert multiple_split('Certain services\\nare subjected to change*over the seperate subscriptions.') == ['Certain services', 'are subjected to change', 'over the seperate subscriptions.']\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nimport re\r\n\r\ndef multiple_split(string):\r\n    # Define the regex pattern for multiple delimiters\r\n    pattern = r'[^\\w\\s]+'\r\n    # Split the string using the pattern\r\n    return re.split(pattern, string)\r\n\r\n# Test cases\r\nassert multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']\r\nassert multiple_split('Mi Box runs on the \\n Latest android*which has google assistance and chromecast.') == ['Mi Box runs on the ', ' Latest android', 'which has google assistance and chromecast.']\r\nassert multiple_split('Certain services\\nare subjected to change*over the seperate subscriptions.') == ['Certain services', 'are subjected to change', 'over the seperate subscriptions.']\r\n```\r\n\r\nThe `multiple_split` function takes a string as input and returns a list of strings after splitting the input string using the regex pattern `[^\\w\\s]+`. The pattern matches one or more characters that are not word characters or whitespace characters. This pattern effectively splits the input string on any non-word and non-whitespace characters. The `re.split` function is used to split the input string using the pattern. The function returns the list of strings after splitting the input string. "}
