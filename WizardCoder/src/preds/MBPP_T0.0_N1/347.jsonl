{"task_id": 358, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef moddiv_list(list1, list2):\r\n    return list(map(lambda x: x[0] % x[1], zip(list1, list2)))\r\n```\r\n\r\nThe `zip` function is used to pair up the elements of the two lists, and the `map` function is used to apply the lambda function to each pair of elements. The lambda function takes two arguments, `x[0]` and `x[1]`, and returns the modulo division of the two numbers. Finally, the `list` function is used to convert the map object into a list.\r\n\r\nHere are the test examples:\r\n\r\n```python\r\nassert moddiv_list([4,5,6],[1, 2, 3])==[0, 1, 0]\r\nassert moddiv_list([3,2],[1,4])==[0, 2]\r\nassert moddiv_list([90,120],[50,70])==[40, 50]\r\n```\r\n\r\nAll the test cases pass. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find modulo division of two lists using map and lambda function.\nTest examples:\nassert moddiv_list([4,5,6],[1, 2, 3])==[0, 1, 0]\nassert moddiv_list([3,2],[1,4])==[0, 2]\nassert moddiv_list([90,120],[50,70])==[40, 50]\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef moddiv_list(list1, list2):\r\n    return list(map(lambda x: x[0] % x[1], zip(list1, list2)))\r\n```\r\n\r\nThe `zip` function is used to pair up the elements of the two lists, and the `map` function is used to apply the lambda function to each pair of elements. The lambda function takes two arguments, `x[0]` and `x[1]`, and returns the modulo division of the two numbers. Finally, the `list` function is used to convert the map object into a list.\r\n\r\nHere are the test examples:\r\n\r\n```python\r\nassert moddiv_list([4,5,6],[1, 2, 3])==[0, 1, 0]\r\nassert moddiv_list([3,2],[1,4])==[0, 2]\r\nassert moddiv_list([90,120],[50,70])==[40, 50]\r\n```\r\n\r\nAll the test cases pass. "}
