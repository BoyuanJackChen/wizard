{"task_id": 178, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef string_literals(literals, string):\r\n    for literal in literals:\r\n        if literal in string:\r\n            return 'Matched!'\r\n    return 'Not Matched!'\r\n```\r\n\r\nThe function `string_literals` takes two arguments: `literals` and `string`. `literals` is a list of strings that we want to search in the `string`. The function loops through each literal in the `literals` list and checks if it is present in the `string`. If a match is found, the function returns `'Matched!'`. If no match is found, the function returns `'Not Matched!'`.\r\n\r\nWe can test the function using the test examples provided in the problem statement. Here's how we can do it:\r\n\r\n```python\r\nassert string_literals(['language'],'python language')==('Matched!')\r\nassert string_literals(['program'],'python language')==('Not Matched!')\r\nassert string_literals(['python'],'programming language')==('Not Matched!')\r\n```\r\n\r\nThe first test case should return `'Matched!'`, the second test case should return `'Not Matched!'`, and the third test case should also return `'Not Matched!'`. If the function is working correctly, all three test cases should pass. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to search some literals strings in a string.\nTest examples:\nassert string_literals(['language'],'python language')==('Matched!')\nassert string_literals(['program'],'python language')==('Not Matched!')\nassert string_literals(['python'],'programming language')==('Not Matched!')\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef string_literals(literals, string):\r\n    for literal in literals:\r\n        if literal in string:\r\n            return 'Matched!'\r\n    return 'Not Matched!'\r\n```\r\n\r\nThe function `string_literals` takes two arguments: `literals` and `string`. `literals` is a list of strings that we want to search in the `string`. The function loops through each literal in the `literals` list and checks if it is present in the `string`. If a match is found, the function returns `'Matched!'`. If no match is found, the function returns `'Not Matched!'`.\r\n\r\nWe can test the function using the test examples provided in the problem statement. Here's how we can do it:\r\n\r\n```python\r\nassert string_literals(['language'],'python language')==('Matched!')\r\nassert string_literals(['program'],'python language')==('Not Matched!')\r\nassert string_literals(['python'],'programming language')==('Not Matched!')\r\n```\r\n\r\nThe first test case should return `'Matched!'`, the second test case should return `'Not Matched!'`, and the third test case should also return `'Not Matched!'`. If the function is working correctly, all three test cases should pass. "}
