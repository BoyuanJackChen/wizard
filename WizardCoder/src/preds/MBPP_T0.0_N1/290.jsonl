{"task_id": 301, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef dict_depth(d):\r\n    if not isinstance(d, dict):\r\n        return 0\r\n    else:\r\n        return 1 + max(dict_depth(v) for v in d.values())\r\n```\r\n\r\nThe function `dict_depth` takes a dictionary `d` as input and returns the depth of the dictionary. The depth of a dictionary is the number of nested dictionaries it contains. If the input is not a dictionary, the function returns 0. Otherwise, it returns 1 plus the maximum depth of all the values in the dictionary. The maximum depth is found by recursively calling the `dict_depth` function on each value in the dictionary and taking the maximum of those values.\r\n\r\nHere are the test examples:\r\n\r\n```python\r\nassert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4\r\nassert dict_depth({'a':1, 'b': {'c':'python'}})==2\r\nassert dict_depth({1: 'Sun', 2: {3: {4:'Mon'}}})==3\r\n```\r\n\r\nThe first test example checks that the depth of a dictionary with one nested dictionary is 4. The second test example checks that the depth of a dictionary with one non-nested dictionary is 2. The third test example checks that the depth of a dictionary with one nested dictionary is 3. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find the depth of a dictionary.\nTest examples:\nassert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4\nassert dict_depth({'a':1, 'b': {'c':'python'}})==2\nassert dict_depth({1: 'Sun', 2: {3: {4:'Mon'}}})==3\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef dict_depth(d):\r\n    if not isinstance(d, dict):\r\n        return 0\r\n    else:\r\n        return 1 + max(dict_depth(v) for v in d.values())\r\n```\r\n\r\nThe function `dict_depth` takes a dictionary `d` as input and returns the depth of the dictionary. The depth of a dictionary is the number of nested dictionaries it contains. If the input is not a dictionary, the function returns 0. Otherwise, it returns 1 plus the maximum depth of all the values in the dictionary. The maximum depth is found by recursively calling the `dict_depth` function on each value in the dictionary and taking the maximum of those values.\r\n\r\nHere are the test examples:\r\n\r\n```python\r\nassert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4\r\nassert dict_depth({'a':1, 'b': {'c':'python'}})==2\r\nassert dict_depth({1: 'Sun', 2: {3: {4:'Mon'}}})==3\r\n```\r\n\r\nThe first test example checks that the depth of a dictionary with one nested dictionary is 4. The second test example checks that the depth of a dictionary with one non-nested dictionary is 2. The third test example checks that the depth of a dictionary with one nested dictionary is 3. "}
