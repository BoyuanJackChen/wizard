{"task_id": 223, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef is_majority(arr, n, majority_element):\r\n    count = 0\r\n    for i in range(n):\r\n        if arr[i] == majority_element:\r\n            count += 1\r\n    if count > n//2:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n# Test cases\r\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\r\nassert is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False\r\nassert is_majority([1, 1, 1, 2, 2], 5, 1) == True\r\n```\r\n\r\nThe `is_majority` function takes three arguments: the sorted array `arr`, the length of the array `n`, and the majority element `majority_element`. It returns `True` if the majority element is present in the array more than `n//2` times, and `False` otherwise.\r\n\r\nThe function iterates through the array and counts the number of times the majority element appears. If the count is greater than `n//2`, it returns `True`. Otherwise, it returns `False`. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to check for majority element in the given sorted array.\nTest examples:\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\nassert is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False\nassert is_majority([1, 1, 1, 2, 2], 5, 1) == True\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef is_majority(arr, n, majority_element):\r\n    count = 0\r\n    for i in range(n):\r\n        if arr[i] == majority_element:\r\n            count += 1\r\n    if count > n//2:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n# Test cases\r\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\r\nassert is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False\r\nassert is_majority([1, 1, 1, 2, 2], 5, 1) == True\r\n```\r\n\r\nThe `is_majority` function takes three arguments: the sorted array `arr`, the length of the array `n`, and the majority element `majority_element`. It returns `True` if the majority element is present in the array more than `n//2` times, and `False` otherwise.\r\n\r\nThe function iterates through the array and counts the number of times the majority element appears. If the count is greater than `n//2`, it returns `True`. Otherwise, it returns `False`. "}
