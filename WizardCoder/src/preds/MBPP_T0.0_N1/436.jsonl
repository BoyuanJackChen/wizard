{"task_id": 447, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef cube_nums(lst):\r\n    return list(map(lambda x: x**3, lst))\r\n\r\n# Test cases\r\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\r\nassert cube_nums([10, 20, 30]) == ([1000, 8000, 27000])\r\nassert cube_nums([12, 15]) == ([1728, 3375])\r\n```\r\n\r\nThe `cube_nums` function takes a list as input and returns a list of cubes of the individual elements in the input list. The `map` function is used to apply the lambda function `lambda x: x**3` to each element of the input list. The `list` function is used to convert the map object to a list. The test cases are included to verify the correctness of the function. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find cubes of individual elements in a list using lambda function.\nTest examples:\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\nassert cube_nums([10,20,30])==([1000, 8000, 27000])\nassert cube_nums([12,15])==([1728, 3375])\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef cube_nums(lst):\r\n    return list(map(lambda x: x**3, lst))\r\n\r\n# Test cases\r\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\r\nassert cube_nums([10, 20, 30]) == ([1000, 8000, 27000])\r\nassert cube_nums([12, 15]) == ([1728, 3375])\r\n```\r\n\r\nThe `cube_nums` function takes a list as input and returns a list of cubes of the individual elements in the input list. The `map` function is used to apply the lambda function `lambda x: x**3` to each element of the input list. The `list` function is used to convert the map object to a list. The test cases are included to verify the correctness of the function. "}
