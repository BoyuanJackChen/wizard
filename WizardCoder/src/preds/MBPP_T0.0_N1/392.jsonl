{"task_id": 403, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\nimport re\r\n\r\ndef is_valid_URL(url):\r\n    pattern = re.compile(\r\n        r'^(?:http|ftp)s?://' # http:// or https://\r\n        r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|' # domain...\r\n        r'localhost|' # localhost...\r\n        r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})' # ...or IP\r\n        r'(?::\\d+)?' # optional port\r\n        r'(?:/?|[/?]\\S+)$', re.IGNORECASE)\r\n    return bool(pattern.match(url))\r\n\r\n# Test cases\r\nassert is_valid_URL(\"https://www.google.com\") == True\r\nassert is_valid_URL(\"https:/www.gmail.com\") == False\r\nassert is_valid_URL(\"https:// www.redit.com\") == False\r\n```\r\n\r\nThe `is_valid_URL` function takes a URL as input and uses a regular expression to check if it is valid or not. The regular expression pattern is based on the RFC 2396 specification for URLs. The function returns `True` if the URL is valid and `False` otherwise. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to check if a url is valid or not using regex.\nTest examples:\nassert is_valid_URL(\"https://www.google.com\") == True\nassert is_valid_URL(\"https:/www.gmail.com\") == False\nassert is_valid_URL(\"https:// www.redit.com\") == False\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\nimport re\r\n\r\ndef is_valid_URL(url):\r\n    pattern = re.compile(\r\n        r'^(?:http|ftp)s?://' # http:// or https://\r\n        r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|' # domain...\r\n        r'localhost|' # localhost...\r\n        r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})' # ...or IP\r\n        r'(?::\\d+)?' # optional port\r\n        r'(?:/?|[/?]\\S+)$', re.IGNORECASE)\r\n    return bool(pattern.match(url))\r\n\r\n# Test cases\r\nassert is_valid_URL(\"https://www.google.com\") == True\r\nassert is_valid_URL(\"https:/www.gmail.com\") == False\r\nassert is_valid_URL(\"https:// www.redit.com\") == False\r\n```\r\n\r\nThe `is_valid_URL` function takes a URL as input and uses a regular expression to check if it is valid or not. The regular expression pattern is based on the RFC 2396 specification for URLs. The function returns `True` if the URL is valid and `False` otherwise. "}
