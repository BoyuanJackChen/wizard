{"task_id": 350, "completion": "Here's the Python function to minimize the length of the string by removing occurrence of only one character:\r\n\r\n```python\r\ndef minimum_Length(s):\r\n    freq = {}\r\n    for char in s:\r\n        if char in freq:\r\n            freq[char] += 1\r\n        else:\r\n            freq[char] = 1\r\n    \r\n    min_len = len(s)\r\n    for char in freq:\r\n        if freq[char] == 1:\r\n            min_len = min(min_len, len(s) - freq[char])\r\n    \r\n    return min_len\r\n```\r\n\r\nExplanation:\r\n\r\n1. We first create a dictionary `freq` to store the frequency of each character in the string `s`.\r\n2. We then iterate through each character in `s` and update the frequency count in the `freq` dictionary.\r\n3. We then initialize a variable `min_len` to the length of `s`.\r\n4. We then iterate through each character in `freq` and check if its frequency is 1. If it is, we subtract its frequency from the length of `s` and update `min_len` if the result is smaller.\r\n5. Finally, we return `min_len` which is the minimum length of the string after removing the occurrence of only one character. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a python function to minimize the length of the string by removing occurrence of only one character.\nTest examples:\nassert minimum_Length(\"mnm\") == 1\nassert minimum_Length(\"abcda\") == 3\nassert minimum_Length(\"abcb\") == 2\n\n### Response:Here's the Python function to minimize the length of the string by removing occurrence of only one character:\r\n\r\n```python\r\ndef minimum_Length(s):\r\n    freq = {}\r\n    for char in s:\r\n        if char in freq:\r\n            freq[char] += 1\r\n        else:\r\n            freq[char] = 1\r\n    \r\n    min_len = len(s)\r\n    for char in freq:\r\n        if freq[char] == 1:\r\n            min_len = min(min_len, len(s) - freq[char])\r\n    \r\n    return min_len\r\n```\r\n\r\nExplanation:\r\n\r\n1. We first create a dictionary `freq` to store the frequency of each character in the string `s`.\r\n2. We then iterate through each character in `s` and update the frequency count in the `freq` dictionary.\r\n3. We then initialize a variable `min_len` to the length of `s`.\r\n4. We then iterate through each character in `freq` and check if its frequency is 1. If it is, we subtract its frequency from the length of `s` and update `min_len` if the result is smaller.\r\n5. Finally, we return `min_len` which is the minimum length of the string after removing the occurrence of only one character. "}
