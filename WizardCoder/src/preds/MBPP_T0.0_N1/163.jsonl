{"task_id": 174, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef group_keyvalue(keyvalue_list):\r\n    result = {}\r\n    for key, value in keyvalue_list:\r\n        if key in result:\r\n            result[key].append(value)\r\n        else:\r\n            result[key] = [value]\r\n    return result\r\n```\r\n\r\nThe function `group_keyvalue` takes a list of key-value pairs as input and returns a dictionary of lists. It iterates through the list of key-value pairs and checks if the key already exists in the result dictionary. If it does, it appends the value to the existing list. If it doesn't, it creates a new list with the value and adds it to the result dictionary with the key. Finally, it returns the result dictionary.\r\n\r\nWe can test the function with the given test examples:\r\n\r\n```python\r\nassert group_keyvalue([('yellow', 1), ('blue', 2), ('yellow', 3), ('blue', 4), ('red', 1)])=={'yellow': [1, 3], 'blue': [2, 4], 'red': [1]}\r\nassert group_keyvalue([('python', 1), ('python', 2), ('python', 3), ('python', 4), ('python', 5)])=={'python': [1,2,3,4,5]}\r\nassert group_keyvalue([('yellow',100), ('blue', 200), ('yellow', 300), ('blue', 400), ('red', 100)])=={'yellow': [100, 300], 'blue': [200, 400], 'red': [100]}\r\n```\r\n\r\nAll the test cases pass. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to group a sequence of key-value pairs into a dictionary of lists.\nTest examples:\nassert group_keyvalue([('yellow', 1), ('blue', 2), ('yellow', 3), ('blue', 4), ('red', 1)])=={'yellow': [1, 3], 'blue': [2, 4], 'red': [1]}\nassert group_keyvalue([('python', 1), ('python', 2), ('python', 3), ('python', 4), ('python', 5)])=={'python': [1,2,3,4,5]}\nassert group_keyvalue([('yellow',100), ('blue', 200), ('yellow', 300), ('blue', 400), ('red', 100)])=={'yellow': [100, 300], 'blue': [200, 400], 'red': [100]}\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef group_keyvalue(keyvalue_list):\r\n    result = {}\r\n    for key, value in keyvalue_list:\r\n        if key in result:\r\n            result[key].append(value)\r\n        else:\r\n            result[key] = [value]\r\n    return result\r\n```\r\n\r\nThe function `group_keyvalue` takes a list of key-value pairs as input and returns a dictionary of lists. It iterates through the list of key-value pairs and checks if the key already exists in the result dictionary. If it does, it appends the value to the existing list. If it doesn't, it creates a new list with the value and adds it to the result dictionary with the key. Finally, it returns the result dictionary.\r\n\r\nWe can test the function with the given test examples:\r\n\r\n```python\r\nassert group_keyvalue([('yellow', 1), ('blue', 2), ('yellow', 3), ('blue', 4), ('red', 1)])=={'yellow': [1, 3], 'blue': [2, 4], 'red': [1]}\r\nassert group_keyvalue([('python', 1), ('python', 2), ('python', 3), ('python', 4), ('python', 5)])=={'python': [1,2,3,4,5]}\r\nassert group_keyvalue([('yellow',100), ('blue', 200), ('yellow', 300), ('blue', 400), ('red', 100)])=={'yellow': [100, 300], 'blue': [200, 400], 'red': [100]}\r\n```\r\n\r\nAll the test cases pass. "}
