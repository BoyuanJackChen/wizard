{"task_id": 75, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef find_tuples(lst, k):\r\n    result = []\r\n    for tup in lst:\r\n        if all(x % k == 0 for x in tup):\r\n            result.append(tup)\r\n    return str(result)\r\n```\r\n\r\nThe function `find_tuples` takes two arguments: a list of tuples `lst` and an integer `k`. It returns a string representation of the list of tuples that have all elements divisible by `k`.\r\n\r\nThe function first initializes an empty list `result` to store the tuples that satisfy the condition.\r\n\r\nThen, it iterates over each tuple `tup` in the list `lst`. For each tuple, it checks if all elements are divisible by `k` using the `all` function and the modulo operator `%`. If the condition is satisfied, the tuple is appended to the `result` list.\r\n\r\nFinally, the function returns the string representation of the `result` list using the `str` function.\r\n\r\nWe can test the function using the given test examples:\r\n\r\n```python\r\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\r\nassert find_tuples([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5) == '[(5, 25, 30)]'\r\nassert find_tuples([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4) == '[(8, 16, 4)]'\r\n```\r\n\r\nAll the test cases pass. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find tuples which have all elements divisible by k from the given list of tuples.\nTest examples:\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\nassert find_tuples([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5) == '[(5, 25, 30)]'\nassert find_tuples([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4) == '[(8, 16, 4)]'\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef find_tuples(lst, k):\r\n    result = []\r\n    for tup in lst:\r\n        if all(x % k == 0 for x in tup):\r\n            result.append(tup)\r\n    return str(result)\r\n```\r\n\r\nThe function `find_tuples` takes two arguments: a list of tuples `lst` and an integer `k`. It returns a string representation of the list of tuples that have all elements divisible by `k`.\r\n\r\nThe function first initializes an empty list `result` to store the tuples that satisfy the condition.\r\n\r\nThen, it iterates over each tuple `tup` in the list `lst`. For each tuple, it checks if all elements are divisible by `k` using the `all` function and the modulo operator `%`. If the condition is satisfied, the tuple is appended to the `result` list.\r\n\r\nFinally, the function returns the string representation of the `result` list using the `str` function.\r\n\r\nWe can test the function using the given test examples:\r\n\r\n```python\r\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\r\nassert find_tuples([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5) == '[(5, 25, 30)]'\r\nassert find_tuples([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4) == '[(8, 16, 4)]'\r\n```\r\n\r\nAll the test cases pass. "}
