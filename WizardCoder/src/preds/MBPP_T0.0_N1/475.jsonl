{"task_id": 486, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nimport math\r\n\r\ndef binomial_probability(n, k, p):\r\n    \"\"\"\r\n    Compute the binomial probability for the given number.\r\n    \"\"\"\r\n    return math.comb(n, k) * (p ** k) * ((1 - p) ** (n - k))\r\n\r\n# Test cases\r\nassert binomial_probability(10, 5, 1.0/3) == 0.13656454808718185\r\nassert binomial_probability(11, 6, 2.0/4) == 0.2255859375\r\nassert binomial_probability(12, 7, 3.0/5) == 0.227030335488\r\n```\r\n\r\nThe `binomial_probability` function takes three arguments: `n` (the number of trials), `k` (the number of successes), and `p` (the probability of success). It uses the `math.comb` function to compute the number of combinations, and then uses the formula for binomial probability to compute the probability. The `assert` statements at the end of the script test the function with the given test cases. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to compute binomial probability for the given number.\nTest examples:\nassert binomial_probability(10, 5, 1.0/3) == 0.13656454808718185\nassert binomial_probability(11, 6, 2.0/4) == 0.2255859375\nassert binomial_probability(12, 7, 3.0/5) == 0.227030335488\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nimport math\r\n\r\ndef binomial_probability(n, k, p):\r\n    \"\"\"\r\n    Compute the binomial probability for the given number.\r\n    \"\"\"\r\n    return math.comb(n, k) * (p ** k) * ((1 - p) ** (n - k))\r\n\r\n# Test cases\r\nassert binomial_probability(10, 5, 1.0/3) == 0.13656454808718185\r\nassert binomial_probability(11, 6, 2.0/4) == 0.2255859375\r\nassert binomial_probability(12, 7, 3.0/5) == 0.227030335488\r\n```\r\n\r\nThe `binomial_probability` function takes three arguments: `n` (the number of trials), `k` (the number of successes), and `p` (the probability of success). It uses the `math.comb` function to compute the number of combinations, and then uses the formula for binomial probability to compute the probability. The `assert` statements at the end of the script test the function with the given test cases. "}
