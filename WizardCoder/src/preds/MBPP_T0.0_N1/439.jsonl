{"task_id": 450, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef extract_string(lst, size):\r\n    result = []\r\n    for string in lst:\r\n        if len(string) >= size:\r\n            result.append(string[:size])\r\n    return result\r\n```\r\n\r\nThe function `extract_string` takes two arguments: a list of strings `lst` and an integer `size`. It returns a list of strings that are extracted from the input list `lst` based on the given size. If the length of a string in the input list is less than the given size, it is not included in the result.\r\n\r\nThe function works by iterating over each string in the input list `lst`. If the length of the string is greater than or equal to the given size, the function extracts the first `size` characters of the string using string slicing and appends it to the result list `result`. Finally, the function returns the result list.\r\n\r\nThe test cases provided in the problem statement are used to verify the correctness of the function. The first test case asserts that the function returns the expected result when the input list contains strings of different lengths and the size is 8. The second test case asserts that the function returns the expected result when the input list contains strings of different lengths and the size is 6. The third test case asserts that the function returns the expected result when the input list contains strings of different lengths and the size is 9. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to extract specified size of strings from a give list of string values.\nTest examples:\nassert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,8)==['practice', 'solution']\nassert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,6)==['Python']\nassert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,9)==['exercises']\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef extract_string(lst, size):\r\n    result = []\r\n    for string in lst:\r\n        if len(string) >= size:\r\n            result.append(string[:size])\r\n    return result\r\n```\r\n\r\nThe function `extract_string` takes two arguments: a list of strings `lst` and an integer `size`. It returns a list of strings that are extracted from the input list `lst` based on the given size. If the length of a string in the input list is less than the given size, it is not included in the result.\r\n\r\nThe function works by iterating over each string in the input list `lst`. If the length of the string is greater than or equal to the given size, the function extracts the first `size` characters of the string using string slicing and appends it to the result list `result`. Finally, the function returns the result list.\r\n\r\nThe test cases provided in the problem statement are used to verify the correctness of the function. The first test case asserts that the function returns the expected result when the input list contains strings of different lengths and the size is 8. The second test case asserts that the function returns the expected result when the input list contains strings of different lengths and the size is 6. The third test case asserts that the function returns the expected result when the input list contains strings of different lengths and the size is 9. "}
