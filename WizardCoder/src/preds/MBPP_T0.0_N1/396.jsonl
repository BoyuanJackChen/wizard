{"task_id": 407, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef rearrange_bigger(num):\r\n    # Convert the number to a string\r\n    num_str = str(num)\r\n    \r\n    # Sort the digits in descending order\r\n    sorted_str = ''.join(sorted(num_str, reverse=True))\r\n    \r\n    # Check if the sorted digits are the same as the original digits\r\n    if sorted_str == num_str:\r\n        return False\r\n    \r\n    # Convert the sorted digits back to an integer\r\n    next_bigger = int(sorted_str)\r\n    \r\n    return next_bigger\r\n```\r\n\r\nExplanation:\r\n\r\nThe function `rearrange_bigger` takes a number as input and returns the next bigger number by rearranging the digits of the given number. The function first converts the number to a string, sorts the digits in descending order using the `sorted` function with the `reverse=True` parameter, and then checks if the sorted digits are the same as the original digits. If they are the same, the function returns `False` as there is no next bigger number. Otherwise, the function converts the sorted digits back to an integer and returns it as the next bigger number.\r\n\r\nTest examples:\r\n\r\n```python\r\nassert rearrange_bigger(12) == 21\r\nassert rearrange_bigger(10) == False\r\nassert rearrange_bigger(102) == 120\r\n``` ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to create the next bigger number by rearranging the digits of a given number.\nTest examples:\nassert rearrange_bigger(12)==21\nassert rearrange_bigger(10)==False\nassert rearrange_bigger(102)==120\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef rearrange_bigger(num):\r\n    # Convert the number to a string\r\n    num_str = str(num)\r\n    \r\n    # Sort the digits in descending order\r\n    sorted_str = ''.join(sorted(num_str, reverse=True))\r\n    \r\n    # Check if the sorted digits are the same as the original digits\r\n    if sorted_str == num_str:\r\n        return False\r\n    \r\n    # Convert the sorted digits back to an integer\r\n    next_bigger = int(sorted_str)\r\n    \r\n    return next_bigger\r\n```\r\n\r\nExplanation:\r\n\r\nThe function `rearrange_bigger` takes a number as input and returns the next bigger number by rearranging the digits of the given number. The function first converts the number to a string, sorts the digits in descending order using the `sorted` function with the `reverse=True` parameter, and then checks if the sorted digits are the same as the original digits. If they are the same, the function returns `False` as there is no next bigger number. Otherwise, the function converts the sorted digits back to an integer and returns it as the next bigger number.\r\n\r\nTest examples:\r\n\r\n```python\r\nassert rearrange_bigger(12) == 21\r\nassert rearrange_bigger(10) == False\r\nassert rearrange_bigger(102) == 120\r\n``` "}
