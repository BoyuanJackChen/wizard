{"task_id": 124, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nimport cmath\r\n\r\ndef angle_complex(z):\r\n    return cmath.phase(z)\r\n\r\n# Test cases\r\nassert angle_complex(0,1j)==1.5707963267948966\r\nassert angle_complex(2,1j)==0.4636476090008061\r\nassert angle_complex(0,2j)==1.5707963267948966\r\n```\r\n\r\nThe `angle_complex` function takes a complex number `z` as input and returns its angle in radians using the `phase` function from the `cmath` module. The `phase` function returns the angle in radians of a complex number in the range [-pi, pi].\r\n\r\nThe test cases provided in the problem statement are used to verify the correctness of the `angle_complex` function. The `assert` statement checks if the function returns the expected output for the given input. If the function returns the expected output, the test case passes. If the function returns a different output, the test case fails and an error message is displayed. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to get the angle of a complex number.\nTest examples:\nassert angle_complex(0,1j)==1.5707963267948966 \nassert angle_complex(2,1j)==0.4636476090008061\nassert angle_complex(0,2j)==1.5707963267948966\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nimport cmath\r\n\r\ndef angle_complex(z):\r\n    return cmath.phase(z)\r\n\r\n# Test cases\r\nassert angle_complex(0,1j)==1.5707963267948966\r\nassert angle_complex(2,1j)==0.4636476090008061\r\nassert angle_complex(0,2j)==1.5707963267948966\r\n```\r\n\r\nThe `angle_complex` function takes a complex number `z` as input and returns its angle in radians using the `phase` function from the `cmath` module. The `phase` function returns the angle in radians of a complex number in the range [-pi, pi].\r\n\r\nThe test cases provided in the problem statement are used to verify the correctness of the `angle_complex` function. The `assert` statement checks if the function returns the expected output for the given input. If the function returns the expected output, the test case passes. If the function returns a different output, the test case fails and an error message is displayed. "}
