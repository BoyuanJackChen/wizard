{"task_id": 272, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef rear_extract(records):\r\n    return [record[-1] for record in records]\r\n\r\n# Test cases\r\nassert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]\r\nassert rear_extract([(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)]) == [36, 25, 45]\r\nassert rear_extract([(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)]) == [14, 36, 56]\r\n```\r\n\r\nThe `rear_extract` function takes a list of tuples as input and returns a list of the last elements of each tuple. The function uses a list comprehension to iterate over each tuple in the input list and extract the last element using the index `-1`. The resulting list of last elements is then returned. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to perfom the rear element extraction from list of tuples records.\nTest examples:\nassert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]\nassert rear_extract([(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)]) == [36, 25, 45]\nassert rear_extract([(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)]) == [14, 36, 56]\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef rear_extract(records):\r\n    return [record[-1] for record in records]\r\n\r\n# Test cases\r\nassert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]\r\nassert rear_extract([(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)]) == [36, 25, 45]\r\nassert rear_extract([(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)]) == [14, 36, 56]\r\n```\r\n\r\nThe `rear_extract` function takes a list of tuples as input and returns a list of the last elements of each tuple. The function uses a list comprehension to iterate over each tuple in the input list and extract the last element using the index `-1`. The resulting list of last elements is then returned. "}
