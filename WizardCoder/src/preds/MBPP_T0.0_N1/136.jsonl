{"task_id": 147, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef max_path_sum(triangle, row, col):\r\n    if row == 0:\r\n        return triangle[0][col]\r\n    \r\n    left_sum = max_path_sum(triangle, row-1, col)\r\n    right_sum = max_path_sum(triangle, row-1, col-1)\r\n    \r\n    return triangle[row][col] + max(left_sum, right_sum)\r\n\r\n# Test cases\r\nassert max_path_sum([[1, 0, 0], [4, 8, 0], [1, 5, 3]], 2, 2) == 14\r\nassert max_path_sum([[13, 0, 0], [7, 4, 0], [2, 4, 6]], 2, 2) == 24\r\nassert max_path_sum([[2, 0, 0], [11, 18, 0], [21, 25, 33]], 2, 2) == 53\r\n```\r\n\r\nThe `max_path_sum` function takes in a triangle, the row and column of the maximum sum to be found, and returns the maximum total path sum. The function first checks if the row is 0, in which case it returns the value at the given column. Otherwise, it recursively calls itself with the previous row and the maximum of the left and right sums of the previous row. Finally, it returns the sum of the current value and the maximum of the left and right sums of the previous row. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find the maximum total path sum in the given triangle.\nTest examples:\nassert max_path_sum([[1, 0, 0], [4, 8, 0], [1, 5, 3]], 2, 2) == 14\nassert max_path_sum([[13, 0, 0], [7, 4, 0], [2, 4, 6]], 2, 2) == 24 \nassert max_path_sum([[2, 0, 0], [11, 18, 0], [21, 25, 33]], 2, 2) == 53\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef max_path_sum(triangle, row, col):\r\n    if row == 0:\r\n        return triangle[0][col]\r\n    \r\n    left_sum = max_path_sum(triangle, row-1, col)\r\n    right_sum = max_path_sum(triangle, row-1, col-1)\r\n    \r\n    return triangle[row][col] + max(left_sum, right_sum)\r\n\r\n# Test cases\r\nassert max_path_sum([[1, 0, 0], [4, 8, 0], [1, 5, 3]], 2, 2) == 14\r\nassert max_path_sum([[13, 0, 0], [7, 4, 0], [2, 4, 6]], 2, 2) == 24\r\nassert max_path_sum([[2, 0, 0], [11, 18, 0], [21, 25, 33]], 2, 2) == 53\r\n```\r\n\r\nThe `max_path_sum` function takes in a triangle, the row and column of the maximum sum to be found, and returns the maximum total path sum. The function first checks if the row is 0, in which case it returns the value at the given column. Otherwise, it recursively calls itself with the previous row and the maximum of the left and right sums of the previous row. Finally, it returns the sum of the current value and the maximum of the left and right sums of the previous row. "}
