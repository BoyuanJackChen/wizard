{"task_id": 233, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\nimport math\r\n\r\ndef lateralsuface_cylinder(radius, height):\r\n    return 2 * math.pi * radius * height\r\n\r\n# Test cases\r\nassert lateralsuface_cylinder(10,5)==314.150000000000003\r\nassert lateralsuface_cylinder(4,5)==125.66000000000001\r\nassert lateralsuface_cylinder(4,10)==251.32000000000002\r\n```\r\n\r\nThe function `lateralsuface_cylinder` takes two arguments, `radius` and `height`, and returns the lateral surface area of a cylinder with those dimensions. The formula for the lateral surface area of a cylinder is `2 * pi * radius * height`, so we use the `math.pi` constant to get the value of pi and multiply it by the product of `radius` and `height`. The `math.pi` constant is imported from the `math` module. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find the lateral surface area of a cylinder.\nTest examples:\nassert lateralsuface_cylinder(10,5)==314.15000000000003\nassert lateralsuface_cylinder(4,5)==125.66000000000001\nassert lateralsuface_cylinder(4,10)==251.32000000000002\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\nimport math\r\n\r\ndef lateralsuface_cylinder(radius, height):\r\n    return 2 * math.pi * radius * height\r\n\r\n# Test cases\r\nassert lateralsuface_cylinder(10,5)==314.150000000000003\r\nassert lateralsuface_cylinder(4,5)==125.66000000000001\r\nassert lateralsuface_cylinder(4,10)==251.32000000000002\r\n```\r\n\r\nThe function `lateralsuface_cylinder` takes two arguments, `radius` and `height`, and returns the lateral surface area of a cylinder with those dimensions. The formula for the lateral surface area of a cylinder is `2 * pi * radius * height`, so we use the `math.pi` constant to get the value of pi and multiply it by the product of `radius` and `height`. The `math.pi` constant is imported from the `math` module. "}
