{"task_id": 40, "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom collections import Counter\r\n\r\ndef freq_element(lst):\r\n    flat_lst = [item for sublist in lst for item in sublist]\r\n    return dict(Counter(flat_lst))\r\n\r\n# Test cases\r\nassert freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\r\nassert freq_element([[1,2,3,4],[5,6,7,8],[9,10,11,12]])==({1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1})\r\nassert freq_element([[15,20,30,40],[80,90,100,110],[30,30,80,90]])==({30: 3, 80: 2, 90: 2, 15: 1, 20: 1, 40: 1, 100: 1, 110: 1})\r\n```\r\n\r\nThe `freq_element` function takes a list of lists as input and returns a dictionary containing the frequency of each element in the flattened list. The `Counter` class from the `collections` module is used to count the frequency of each element in the flattened list. The `dict` function is used to convert the `Counter` object to a dictionary. The `flat_lst` variable is a list comprehension that flattens the input list of lists. The `assert` statements at the end of the script are used to test the function with the given test cases. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to find frequency of the elements in a given list of lists using collections module.\nTest examples:\nassert freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\nassert freq_element([[1,2,3,4],[5,6,7,8],[9,10,11,12]])==({1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1})\nassert freq_element([[15,20,30,40],[80,90,100,110],[30,30,80,90]])==({30: 3, 80: 2, 90: 2, 15: 1, 20: 1, 40: 1, 100: 1, 110: 1})\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom collections import Counter\r\n\r\ndef freq_element(lst):\r\n    flat_lst = [item for sublist in lst for item in sublist]\r\n    return dict(Counter(flat_lst))\r\n\r\n# Test cases\r\nassert freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\r\nassert freq_element([[1,2,3,4],[5,6,7,8],[9,10,11,12]])==({1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1})\r\nassert freq_element([[15,20,30,40],[80,90,100,110],[30,30,80,90]])==({30: 3, 80: 2, 90: 2, 15: 1, 20: 1, 40: 1, 100: 1, 110: 1})\r\n```\r\n\r\nThe `freq_element` function takes a list of lists as input and returns a dictionary containing the frequency of each element in the flattened list. The `Counter` class from the `collections` module is used to count the frequency of each element in the flattened list. The `dict` function is used to convert the `Counter` object to a dictionary. The `flat_lst` variable is a list comprehension that flattens the input list of lists. The `assert` statements at the end of the script are used to test the function with the given test cases. "}
