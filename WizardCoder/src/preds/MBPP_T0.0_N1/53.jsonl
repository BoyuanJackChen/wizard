{"task_id": 64, "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef subject_marks(subjects):\r\n    return sorted(subjects, key=lambda x: x[1], reverse=True)\r\n\r\n# Test cases\r\nassert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\r\nassert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])\r\nassert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])\r\n```\r\n\r\nThe `subject_marks` function takes a list of tuples as input and returns a sorted list of tuples based on the second element of each tuple (the marks). The `key` parameter of the `sorted` function is set to a lambda function that returns the second element of each tuple. The `reverse` parameter is set to `True` to sort the list in descending order. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a function to sort a list of tuples using lambda.\nTest examples:\nassert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\nassert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])\nassert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef subject_marks(subjects):\r\n    return sorted(subjects, key=lambda x: x[1], reverse=True)\r\n\r\n# Test cases\r\nassert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\r\nassert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])\r\nassert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])\r\n```\r\n\r\nThe `subject_marks` function takes a list of tuples as input and returns a sorted list of tuples based on the second element of each tuple (the marks). The `key` parameter of the `sorted` function is set to a lambda function that returns the second element of each tuple. The `reverse` parameter is set to `True` to sort the list in descending order. "}
