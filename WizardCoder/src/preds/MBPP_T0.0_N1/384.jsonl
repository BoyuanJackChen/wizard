{"task_id": 395, "completion": "Here's the Python function to find the first non-repeating character in a given string:\r\n\r\n```python\r\ndef first_non_repeating_character(string):\r\n    char_count = {}\r\n    for char in string:\r\n        if char in char_count:\r\n            char_count[char] += 1\r\n        else:\r\n            char_count[char] = 1\r\n    for char in string:\r\n        if char_count[char] == 1:\r\n            return char\r\n    return None\r\n```\r\n\r\nThe function first creates a dictionary to keep track of the count of each character in the string. It then iterates through the string, updating the count of each character in the dictionary. Finally, it iterates through the string again, returning the first character with a count of 1, or None if no such character exists. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a python function to find the first non-repeated character in a given string.\nTest examples:\nassert first_non_repeating_character(\"abcabc\") == None\nassert first_non_repeating_character(\"abc\") == \"a\"\nassert first_non_repeating_character(\"ababc\") == \"c\"\n\n### Response:Here's the Python function to find the first non-repeating character in a given string:\r\n\r\n```python\r\ndef first_non_repeating_character(string):\r\n    char_count = {}\r\n    for char in string:\r\n        if char in char_count:\r\n            char_count[char] += 1\r\n        else:\r\n            char_count[char] = 1\r\n    for char in string:\r\n        if char_count[char] == 1:\r\n            return char\r\n    return None\r\n```\r\n\r\nThe function first creates a dictionary to keep track of the count of each character in the string. It then iterates through the string, updating the count of each character in the dictionary. Finally, it iterates through the string again, returning the first character with a count of 1, or None if no such character exists. "}
