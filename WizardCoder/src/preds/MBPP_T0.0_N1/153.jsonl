{"task_id": 164, "completion": "Here's the Python function to check whether the sum of divisors are same or not:\r\n\r\n```python\r\ndef areEquivalent(num1, num2):\r\n    # function to check whether the sum of divisors are same or not\r\n    def sum_of_divisors(n):\r\n        # function to calculate the sum of divisors of a number\r\n        divisors_sum = 0\r\n        for i in range(1, n+1):\r\n            if n % i == 0:\r\n                divisors_sum += i\r\n        return divisors_sum\r\n    \r\n    return sum_of_divisors(num1) == sum_of_divisors(num2)\r\n```\r\n\r\nThe function `areEquivalent` takes two numbers as input and returns `True` if the sum of divisors of both numbers are same, otherwise it returns `False`. The function `sum_of_divisors` is a nested function that calculates the sum of divisors of a number. The main function `areEquivalent` calls this nested function to calculate the sum of divisors of both input numbers and compares them to check whether they are same or not. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a python function to check whether the sum of divisors are same or not.\nTest examples:\nassert areEquivalent(36,57) == False\nassert areEquivalent(2,4) == False\nassert areEquivalent(23,47) == True\n\n### Response:Here's the Python function to check whether the sum of divisors are same or not:\r\n\r\n```python\r\ndef areEquivalent(num1, num2):\r\n    # function to check whether the sum of divisors are same or not\r\n    def sum_of_divisors(n):\r\n        # function to calculate the sum of divisors of a number\r\n        divisors_sum = 0\r\n        for i in range(1, n+1):\r\n            if n % i == 0:\r\n                divisors_sum += i\r\n        return divisors_sum\r\n    \r\n    return sum_of_divisors(num1) == sum_of_divisors(num2)\r\n```\r\n\r\nThe function `areEquivalent` takes two numbers as input and returns `True` if the sum of divisors of both numbers are same, otherwise it returns `False`. The function `sum_of_divisors` is a nested function that calculates the sum of divisors of a number. The main function `areEquivalent` calls this nested function to calculate the sum of divisors of both input numbers and compares them to check whether they are same or not. "}
