{"task_id": 352, "completion": "Here's the Python function to check whether all the characters in a given string are unique:\r\n\r\n```python\r\ndef unique_Characters(string):\r\n    # Create an empty set to store unique characters\r\n    unique_set = set()\r\n    \r\n    # Loop through each character in the string\r\n    for char in string:\r\n        # If the character is already in the set, return False\r\n        if char in unique_set:\r\n            return False\r\n        # Otherwise, add the character to the set\r\n        else:\r\n            unique_set.add(char)\r\n    \r\n    # If all characters are unique, return True\r\n    return True\r\n```\r\n\r\nWe can test this function with the given test examples:\r\n\r\n```python\r\nassert unique_Characters('aba') == False\r\nassert unique_Characters('abc') == True\r\nassert unique_Characters('abab') == False\r\n```\r\n\r\nThe function works by creating an empty set to store unique characters. It then loops through each character in the string and checks if the character is already in the set. If it is, the function returns False. If it isn't, the character is added to the set. If the loop completes without finding any duplicate characters, the function returns True. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a python function to check whether all the characters in a given string are unique.\nTest examples:\nassert unique_Characters('aba') == False\nassert unique_Characters('abc') == True\nassert unique_Characters('abab') == False\n\n### Response:Here's the Python function to check whether all the characters in a given string are unique:\r\n\r\n```python\r\ndef unique_Characters(string):\r\n    # Create an empty set to store unique characters\r\n    unique_set = set()\r\n    \r\n    # Loop through each character in the string\r\n    for char in string:\r\n        # If the character is already in the set, return False\r\n        if char in unique_set:\r\n            return False\r\n        # Otherwise, add the character to the set\r\n        else:\r\n            unique_set.add(char)\r\n    \r\n    # If all characters are unique, return True\r\n    return True\r\n```\r\n\r\nWe can test this function with the given test examples:\r\n\r\n```python\r\nassert unique_Characters('aba') == False\r\nassert unique_Characters('abc') == True\r\nassert unique_Characters('abab') == False\r\n```\r\n\r\nThe function works by creating an empty set to store unique characters. It then loops through each character in the string and checks if the character is already in the set. If it is, the function returns False. If it isn't, the character is added to the set. If the loop completes without finding any duplicate characters, the function returns True. "}
