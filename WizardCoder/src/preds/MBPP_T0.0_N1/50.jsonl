{"task_id": 61, "completion": "Here's the Python function to count the number of substrings with the sum of digits equal to their length:\r\n\r\n```python\r\ndef count_Substrings(s, n):\r\n    count = 0\r\n    for i in range(n):\r\n        for j in range(i+1, n+1):\r\n            if sum(int(d) for d in s[i:j]) == j-i:\r\n                count += 1\r\n    return count\r\n```\r\n\r\nThe function takes two arguments: `s` is the input string and `n` is the length of the substrings to consider. It initializes a counter `count` to zero and then iterates over all possible pairs of indices `i` and `j` such that `i <= j` and `i+1 <= j`. For each pair, it checks if the sum of digits in the substring `s[i:j]` is equal to `j-i`. If it is, then it increments the counter. Finally, it returns the value of the counter.\r\n\r\nHere are some test cases:\r\n\r\n```python\r\nassert count_Substrings('112112',6) == 6\r\nassert count_Substrings('111',3) == 6\r\nassert count_Substrings('1101112',7) == 12\r\n```\r\n\r\nThe first test case checks that the function correctly counts the number of substrings of length 6 in the string '112112' that have a sum of digits equal to their length. The second test case checks that the function correctly counts the number of substrings of length 3 in the string '111' that have a sum of digits equal to their length. The third test case checks that the function correctly counts the number of substrings of length 7 in the string '1101112' that have a sum of digits equal to their length. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Python script for this problem:\n\nWrite a python function to count number of substrings with the sum of digits equal to their length.\nTest examples:\nassert count_Substrings('112112',6) == 6\nassert count_Substrings('111',3) == 6\nassert count_Substrings('1101112',7) == 12\n\n### Response:Here's the Python function to count the number of substrings with the sum of digits equal to their length:\r\n\r\n```python\r\ndef count_Substrings(s, n):\r\n    count = 0\r\n    for i in range(n):\r\n        for j in range(i+1, n+1):\r\n            if sum(int(d) for d in s[i:j]) == j-i:\r\n                count += 1\r\n    return count\r\n```\r\n\r\nThe function takes two arguments: `s` is the input string and `n` is the length of the substrings to consider. It initializes a counter `count` to zero and then iterates over all possible pairs of indices `i` and `j` such that `i <= j` and `i+1 <= j`. For each pair, it checks if the sum of digits in the substring `s[i:j]` is equal to `j-i`. If it is, then it increments the counter. Finally, it returns the value of the counter.\r\n\r\nHere are some test cases:\r\n\r\n```python\r\nassert count_Substrings('112112',6) == 6\r\nassert count_Substrings('111',3) == 6\r\nassert count_Substrings('1101112',7) == 12\r\n```\r\n\r\nThe first test case checks that the function correctly counts the number of substrings of length 6 in the string '112112' that have a sum of digits equal to their length. The second test case checks that the function correctly counts the number of substrings of length 3 in the string '111' that have a sum of digits equal to their length. The third test case checks that the function correctly counts the number of substrings of length 7 in the string '1101112' that have a sum of digits equal to their length. "}
