{"task_id": "HumanEval/126", "completion": "Here's the Python script for the given problem:\r\n\r\n\r\n```python\r\ndef is_sorted(lst):\r\n    '''\r\n    Given a list of numbers, return whether or not they are sorted\r\n    in ascending order. If list has more than 1 duplicate of the same\r\n    number, return False. Assume no negative numbers and only integers.\r\n\r\n    Examples\r\n    is_sorted([5]) \u279e True\r\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\r\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\r\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\r\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\r\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\r\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\r\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False\r\n    '''\r\n    \r\n    # Check if list has more than 1 duplicate of the same number\r\n    for i in range(len(lst)-1):\r\n        if lst[i] == lst[i+1]:\r\n            return False\r\n    \r\n    # Check if list is sorted in ascending order\r\n    for i in range(len(lst)-1):\r\n        if lst[i] > lst[i+1]:\r\n            return False\r\n    \r\n    return True\r\n```\r\n\r\nThe function first checks if the list has more than 1 duplicate of the same number. If it does, it returns False. Then, it checks if the list is sorted in ascending order. If it is, it returns True. If not, it returns False. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef is_sorted(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5]) \u279e True\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n\r\n```python\r\ndef is_sorted(lst):\r\n    '''\r\n    Given a list of numbers, return whether or not they are sorted\r\n    in ascending order. If list has more than 1 duplicate of the same\r\n    number, return False. Assume no negative numbers and only integers.\r\n\r\n    Examples\r\n    is_sorted([5]) \u279e True\r\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\r\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\r\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\r\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\r\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\r\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\r\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False\r\n    '''\r\n    \r\n    # Check if list has more than 1 duplicate of the same number\r\n    for i in range(len(lst)-1):\r\n        if lst[i] == lst[i+1]:\r\n            return False\r\n    \r\n    # Check if list is sorted in ascending order\r\n    for i in range(len(lst)-1):\r\n        if lst[i] > lst[i+1]:\r\n            return False\r\n    \r\n    return True\r\n```\r\n\r\nThe function first checks if the list has more than 1 duplicate of the same number. If it does, it returns False. Then, it checks if the list is sorted in ascending order. If it is, it returns True. If not, it returns False. "}
