{"task_id": "HumanEval/81", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef numerical_letter_grade(grades):\r\n    \"\"\"It is the last week of the semester and the teacher has to give the grades\r\n    to students. The teacher has been making her own algorithm for grading. \r\n    The only problem is, she has lost the code she used for grading. \r\n    She has given you a list of GPAs for some students and you have to write \r\n    a function that can output a list of letter grades using the following table:\r\n            GPA       |       Letter grade\r\n            4.0           A+\r\n            > 3.7          A  \r\n            > 3.3          A- \r\n            > 3.0          B+\r\n            > 2.7          B  \r\n            > 2.3          B-\r\n            > 2.0          C+\r\n            > 1.7          C\r\n            > 1.3          C-\r\n            > 1.0          D+  \r\n            > 0.7          D  \r\n            > 0.0          D-\r\n            0.0              E\r\n\r\n    Example:\r\n    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\r\n    \"\"\"\r\n    letter_grades = []\r\n    for grade in grades:\r\n        if grade >= 4.0:\r\n            letter_grades.append('A+')\r\n        elif grade > 3.7:\r\n            letter_grades.append('A')\r\n        elif grade > 3.3:\r\n            letter_grades.append('A-')\r\n        elif grade > 3.0:\r\n            letter_grades.append('B+')\r\n        elif grade > 2.7:\r\n            letter_grades.append('B')\r\n        elif grade > 2.3:\r\n            letter_grades.append('B-')\r\n        elif grade > 2.0:\r\n            letter_grades.append('C+')\r\n        elif grade > 1.7:\r\n            letter_grades.append('C')\r\n        elif grade > 1.3:\r\n            letter_grades.append('C-')\r\n        elif grade > 1.0:\r\n            letter_grades.append('D+')\r\n        elif grade > 0.7:\r\n            letter_grades.append('D')\r\n        elif grade > 0.0:\r\n            letter_grades.append('D-')\r\n        else:\r\n            letter_grades.append('E')\r\n    return letter_grades\r\n```\r\n\r\nThe function takes a list of GPAs as input and returns a list of letter grades based on the given table. It uses a for loop to iterate over each grade in the input list and checks if the grade is greater than or equal to 4.0, greater than 3.7, and so on, until it finds the appropriate letter grade and appends it to the output list. Finally, it returns the output list. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef numerical_letter_grade(grades):\n    \"\"\"It is the last week of the semester and the teacher has to give the grades\n    to students. The teacher has been making her own algorithm for grading.\n    The only problem is, she has lost the code she used for grading.\n    She has given you a list of GPAs for some students and you have to write \n    a function that can output a list of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n\n    Example:\n    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef numerical_letter_grade(grades):\r\n    \"\"\"It is the last week of the semester and the teacher has to give the grades\r\n    to students. The teacher has been making her own algorithm for grading. \r\n    The only problem is, she has lost the code she used for grading. \r\n    She has given you a list of GPAs for some students and you have to write \r\n    a function that can output a list of letter grades using the following table:\r\n            GPA       |       Letter grade\r\n            4.0           A+\r\n            > 3.7          A  \r\n            > 3.3          A- \r\n            > 3.0          B+\r\n            > 2.7          B  \r\n            > 2.3          B-\r\n            > 2.0          C+\r\n            > 1.7          C\r\n            > 1.3          C-\r\n            > 1.0          D+  \r\n            > 0.7          D  \r\n            > 0.0          D-\r\n            0.0              E\r\n\r\n    Example:\r\n    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\r\n    \"\"\"\r\n    letter_grades = []\r\n    for grade in grades:\r\n        if grade >= 4.0:\r\n            letter_grades.append('A+')\r\n        elif grade > 3.7:\r\n            letter_grades.append('A')\r\n        elif grade > 3.3:\r\n            letter_grades.append('A-')\r\n        elif grade > 3.0:\r\n            letter_grades.append('B+')\r\n        elif grade > 2.7:\r\n            letter_grades.append('B')\r\n        elif grade > 2.3:\r\n            letter_grades.append('B-')\r\n        elif grade > 2.0:\r\n            letter_grades.append('C+')\r\n        elif grade > 1.7:\r\n            letter_grades.append('C')\r\n        elif grade > 1.3:\r\n            letter_grades.append('C-')\r\n        elif grade > 1.0:\r\n            letter_grades.append('D+')\r\n        elif grade > 0.7:\r\n            letter_grades.append('D')\r\n        elif grade > 0.0:\r\n            letter_grades.append('D-')\r\n        else:\r\n            letter_grades.append('E')\r\n    return letter_grades\r\n```\r\n\r\nThe function takes a list of GPAs as input and returns a list of letter grades based on the given table. It uses a for loop to iterate over each grade in the input list and checks if the grade is greater than or equal to 4.0, greater than 3.7, and so on, until it finds the appropriate letter grade and appends it to the output list. Finally, it returns the output list. "}
