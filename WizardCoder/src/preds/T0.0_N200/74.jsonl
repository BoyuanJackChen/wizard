{"task_id": "HumanEval/18", "completion": "Here's the Python script for the given problem:\r\n\r\n\r\n```python\r\ndef how_many_times(string: str, substring: str) -> int:\r\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\r\n    >>> how_many_times('', 'a')\r\n    0\r\n    >>> how_many_times('aaa', 'a')\r\n    3\r\n    >>> how_many_times('aaaa', 'aa')\r\n    3\r\n    \"\"\"\r\n    count = 0\r\n    i = 0\r\n    while i < len(string):\r\n        if string[i:i+len(substring)] == substring:\r\n            count += 1\r\n            i += len(substring)\r\n        else:\r\n            i += 1\r\n    return count\r\n```\r\n\r\n\r\nThe function `how_many_times` takes two arguments: `string` and `substring`. It returns an integer value that represents the number of times the `substring` can be found in the `string`. The function uses a while loop to iterate through the `string` and checks if the current substring matches the `substring`. If it does, the count is incremented and the loop continues to the next substring. If it doesn't, the loop continues to the next character in the `string`. The loop continues until the end of the `string` is reached. Finally, the function returns the count of the number of times the `substring` can be found in the `string`. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\n\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n\r\n```python\r\ndef how_many_times(string: str, substring: str) -> int:\r\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\r\n    >>> how_many_times('', 'a')\r\n    0\r\n    >>> how_many_times('aaa', 'a')\r\n    3\r\n    >>> how_many_times('aaaa', 'aa')\r\n    3\r\n    \"\"\"\r\n    count = 0\r\n    i = 0\r\n    while i < len(string):\r\n        if string[i:i+len(substring)] == substring:\r\n            count += 1\r\n            i += len(substring)\r\n        else:\r\n            i += 1\r\n    return count\r\n```\r\n\r\n\r\nThe function `how_many_times` takes two arguments: `string` and `substring`. It returns an integer value that represents the number of times the `substring` can be found in the `string`. The function uses a while loop to iterate through the `string` and checks if the current substring matches the `substring`. If it does, the count is incremented and the loop continues to the next substring. If it doesn't, the loop continues to the next character in the `string`. The loop continues until the end of the `string` is reached. Finally, the function returns the count of the number of times the `substring` can be found in the `string`. "}
