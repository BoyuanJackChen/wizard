{"task_id": "HumanEval/103", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef rounded_avg(n, m):\r\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\r\n    average of the integers from n through m (including n and m). \r\n    Round the answer to the nearest integer and convert that to binary.\r\n    If n is greater than m, return -1.\r\n    Example:\r\n    rounded_avg(1, 5) => \"0b11\"\r\n    rounded_avg(7, 5) => -1\r\n    rounded_avg(10, 20) => \"0b1111\"\r\n    rounded_avg(20, 33) => \"0b11010\"\r\n    \"\"\"\r\n    if n > m:\r\n        return -1\r\n    else:\r\n        avg = round((n + m) / 2)\r\n        return bin(avg)[2:]\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. First, we check if `n` is greater than `m`. If it is, we return -1.\r\n2. If `n` is not greater than `m`, we compute the average of `n` and `m` by adding them and dividing by 2. We then round this value to the nearest integer using the `round()` function.\r\n3. Finally, we convert the rounded average to binary using the `bin()` function and return the result.\r\n\r\nNote that we use the `[2:]` slice to remove the `0b` prefix from the binary string. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef rounded_avg(n, m):\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\n    average of the integers from n through m (including n and m). \n    Round the answer to the nearest integer and convert that to binary.\n    If n is greater than m, return -1.\n    Example:\n    rounded_avg(1, 5) => \"0b11\"\n    rounded_avg(7, 5) => -1\n    rounded_avg(10, 20) => \"0b1111\"\n    rounded_avg(20, 33) => \"0b11010\"\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef rounded_avg(n, m):\r\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\r\n    average of the integers from n through m (including n and m). \r\n    Round the answer to the nearest integer and convert that to binary.\r\n    If n is greater than m, return -1.\r\n    Example:\r\n    rounded_avg(1, 5) => \"0b11\"\r\n    rounded_avg(7, 5) => -1\r\n    rounded_avg(10, 20) => \"0b1111\"\r\n    rounded_avg(20, 33) => \"0b11010\"\r\n    \"\"\"\r\n    if n > m:\r\n        return -1\r\n    else:\r\n        avg = round((n + m) / 2)\r\n        return bin(avg)[2:]\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. First, we check if `n` is greater than `m`. If it is, we return -1.\r\n2. If `n` is not greater than `m`, we compute the average of `n` and `m` by adding them and dividing by 2. We then round this value to the nearest integer using the `round()` function.\r\n3. Finally, we convert the rounded average to binary using the `bin()` function and return the result.\r\n\r\nNote that we use the `[2:]` slice to remove the `0b` prefix from the binary string. "}
