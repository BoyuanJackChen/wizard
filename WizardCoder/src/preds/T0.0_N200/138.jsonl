{"task_id": "HumanEval/76", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef is_simple_power(x, n):\r\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\r\n    power of n and false in other cases. x is a simple power of n if n**int=x\r\n    For example:\r\n    is_simple_power(1, 4) => true\r\n    is_simple_power(2, 2) => true\r\n    is_simple_power(8, 2) => true\r\n    is_simple_power(3, 2) => false\r\n    is_simple_power(3, 1) => false\r\n    is_simple_power(5, 3) => false\r\n    \"\"\"\r\n    if n == 1:\r\n        return True\r\n    elif x == 1:\r\n        return False\r\n    else:\r\n        return x == n ** int(x/n)\r\n```\r\n\r\nThe function takes two arguments, `x` and `n`, and returns `True` if `x` is a simple power of `n` and `False` otherwise. The function first checks if `n` is equal to 1, in which case it returns `True` because any number is a simple power of 1. If `x` is equal to 1, the function returns `False` because 1 is not a simple power of any number. Otherwise, the function checks if `x` is equal to `n` raised to the power of `int(x/n)`. If it is, the function returns `True`, otherwise it returns `False`. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef is_simple_power(x, n):\r\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\r\n    power of n and false in other cases. x is a simple power of n if n**int=x\r\n    For example:\r\n    is_simple_power(1, 4) => true\r\n    is_simple_power(2, 2) => true\r\n    is_simple_power(8, 2) => true\r\n    is_simple_power(3, 2) => false\r\n    is_simple_power(3, 1) => false\r\n    is_simple_power(5, 3) => false\r\n    \"\"\"\r\n    if n == 1:\r\n        return True\r\n    elif x == 1:\r\n        return False\r\n    else:\r\n        return x == n ** int(x/n)\r\n```\r\n\r\nThe function takes two arguments, `x` and `n`, and returns `True` if `x` is a simple power of `n` and `False` otherwise. The function first checks if `n` is equal to 1, in which case it returns `True` because any number is a simple power of 1. If `x` is equal to 1, the function returns `False` because 1 is not a simple power of any number. Otherwise, the function checks if `x` is equal to `n` raised to the power of `int(x/n)`. If it is, the function returns `True`, otherwise it returns `False`. "}
