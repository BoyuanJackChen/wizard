{"task_id": "HumanEval/88", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef sort_array(array):\r\n    \"\"\"\r\n    Given an array of non-negative integers, return a copy of the given array after sorting,\r\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\r\n    or sort it in descending order if the sum( first index value, last index value) is even.\r\n\r\n    Note:\r\n    * don't change the given array.\r\n\r\n    Examples:\r\n    * sort_array([]) => []\r\n    * sort_array([5]) => [5]\r\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\r\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\r\n    \"\"\"\r\n\r\n    if not array:\r\n        return []\r\n\r\n    first_index_value = array[0]\r\n    last_index_value = array[-1]\r\n    sum_of_values = first_index_value + last_index_value\r\n\r\n    if sum_of_values % 2 == 0:\r\n        return sorted(array, reverse=True)\r\n    else:\r\n        return sorted(array)\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. First, we check if the given array is empty or not. If it is empty, we return an empty list.\r\n2. We then get the first and last index values of the array and calculate their sum.\r\n3. If the sum is even, we sort the array in descending order using the `sorted()` function with the `reverse=True` parameter.\r\n4. If the sum is odd, we sort the array in ascending order using the `sorted()` function without any parameters.\r\n5. We return the sorted array.\r\n\r\nLet's test the function with the given examples:\r\n\r\n```python\r\nprint(sort_array([]))  # []\r\nprint(sort_array([5]))  # [5]\r\nprint(sort_array([2, 4, 3, 0, 1, 5]))  # [0, 1, 2, 3, 4, 5]\r\nprint(sort_array([2, 4, 3, 0, 1, 5, 6]))  # [6, 5, 4, 3, 2, 1, 0]\r\n```\r\n\r\nThe output of the above code will be:\r\n\r\n```\r\n[]\r\n[5]\r\n[0, 1, 2, 3, 4, 5]\r\n[6, 5, 4, 3, 2, 1, 0]\r\n```\r\n\r\nAs we can see, the function is working as expected. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef sort_array(array):\r\n    \"\"\"\r\n    Given an array of non-negative integers, return a copy of the given array after sorting,\r\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\r\n    or sort it in descending order if the sum( first index value, last index value) is even.\r\n\r\n    Note:\r\n    * don't change the given array.\r\n\r\n    Examples:\r\n    * sort_array([]) => []\r\n    * sort_array([5]) => [5]\r\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\r\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\r\n    \"\"\"\r\n\r\n    if not array:\r\n        return []\r\n\r\n    first_index_value = array[0]\r\n    last_index_value = array[-1]\r\n    sum_of_values = first_index_value + last_index_value\r\n\r\n    if sum_of_values % 2 == 0:\r\n        return sorted(array, reverse=True)\r\n    else:\r\n        return sorted(array)\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. First, we check if the given array is empty or not. If it is empty, we return an empty list.\r\n2. We then get the first and last index values of the array and calculate their sum.\r\n3. If the sum is even, we sort the array in descending order using the `sorted()` function with the `reverse=True` parameter.\r\n4. If the sum is odd, we sort the array in ascending order using the `sorted()` function without any parameters.\r\n5. We return the sorted array.\r\n\r\nLet's test the function with the given examples:\r\n\r\n```python\r\nprint(sort_array([]))  # []\r\nprint(sort_array([5]))  # [5]\r\nprint(sort_array([2, 4, 3, 0, 1, 5]))  # [0, 1, 2, 3, 4, 5]\r\nprint(sort_array([2, 4, 3, 0, 1, 5, 6]))  # [6, 5, 4, 3, 2, 1, 0]\r\n```\r\n\r\nThe output of the above code will be:\r\n\r\n```\r\n[]\r\n[5]\r\n[0, 1, 2, 3, 4, 5]\r\n[6, 5, 4, 3, 2, 1, 0]\r\n```\r\n\r\nAs we can see, the function is working as expected. "}
