{"task_id": "HumanEval/9", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom typing import List, Tuple\r\n\r\ndef rolling_max(numbers: List[int]) -> List[int]:\r\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\r\n    in the sequence.\r\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\r\n    [1, 2, 3, 3, 3, 4, 4]\r\n    \"\"\"\r\n    max_so_far = numbers[0]\r\n    rolling_max_list = [max_so_far]\r\n    for num in numbers[1:]:\r\n        max_so_far = max(num, max_so_far + num)\r\n        rolling_max_list.append(max_so_far)\r\n    return rolling_max_list\r\n```\r\n\r\nThe `rolling_max` function takes a list of integers as input and returns a list of integers. The function initializes a variable `max_so_far` to the first element of the input list. It then iterates through the input list, updating the `max_so_far` variable with the maximum of the current element and the sum of the current element and the previous `max_so_far` value. This ensures that the `max_so_far` variable always contains the maximum element found so far in the input list. Finally, the function appends the current value of `max_so_far` to the `rolling_max_list` and returns it. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nfrom typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom typing import List, Tuple\r\n\r\ndef rolling_max(numbers: List[int]) -> List[int]:\r\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\r\n    in the sequence.\r\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\r\n    [1, 2, 3, 3, 3, 4, 4]\r\n    \"\"\"\r\n    max_so_far = numbers[0]\r\n    rolling_max_list = [max_so_far]\r\n    for num in numbers[1:]:\r\n        max_so_far = max(num, max_so_far + num)\r\n        rolling_max_list.append(max_so_far)\r\n    return rolling_max_list\r\n```\r\n\r\nThe `rolling_max` function takes a list of integers as input and returns a list of integers. The function initializes a variable `max_so_far` to the first element of the input list. It then iterates through the input list, updating the `max_so_far` variable with the maximum of the current element and the sum of the current element and the previous `max_so_far` value. This ensures that the `max_so_far` variable always contains the maximum element found so far in the input list. Finally, the function appends the current value of `max_so_far` to the `rolling_max_list` and returns it. "}
