{"task_id": "HumanEval/156", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef int_to_mini_roman(number):\r\n    \"\"\"\r\n    Given a positive integer, obtain its roman numeral equivalent as a string,\r\n    and return it in lowercase.\r\n    Restrictions: 1 <= num <= 1000\r\n\r\n    Examples:\r\n    >>> int_to_mini_roman(19) == 'xix'\r\n    >>> int_to_mini_roman(152) == 'clii'\r\n    >>> int_to_mini_roman(426) == 'cdxxvi'\r\n    \"\"\"\r\n    roman_numerals = {\r\n        1000: 'm',\r\n        900: 'cm',\r\n        500: 'd',\r\n        400: 'cd',\r\n        100: 'c',\r\n        90: 'xc',\r\n        50: 'l',\r\n        40: 'xl',\r\n        10: 'x',\r\n        9: 'ix',\r\n        5: 'v',\r\n        4: 'iv',\r\n        1: 'i'\r\n    }\r\n\r\n    roman_num = ''\r\n    for value, numeral in roman_numerals.items():\r\n        while number >= value:\r\n            roman_num += numeral\r\n            number -= value\r\n\r\n    return roman_num.lower()\r\n```\r\n\r\nThe function `int_to_mini_roman` takes a positive integer `number` as input and returns its roman numeral equivalent as a string in lowercase. The function uses a dictionary `roman_numerals` to map each integer value to its corresponding roman numeral. The function iterates through the dictionary and adds the roman numeral to the output string `roman_num` as many times as necessary until the input number is reduced to zero. Finally, the function returns the lowercase roman numeral equivalent of the input number. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef int_to_mini_roman(number):\n    \"\"\"\n    Given a positive integer, obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19) == 'xix'\n    >>> int_to_mini_roman(152) == 'clii'\n    >>> int_to_mini_roman(426) == 'cdxxvi'\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef int_to_mini_roman(number):\r\n    \"\"\"\r\n    Given a positive integer, obtain its roman numeral equivalent as a string,\r\n    and return it in lowercase.\r\n    Restrictions: 1 <= num <= 1000\r\n\r\n    Examples:\r\n    >>> int_to_mini_roman(19) == 'xix'\r\n    >>> int_to_mini_roman(152) == 'clii'\r\n    >>> int_to_mini_roman(426) == 'cdxxvi'\r\n    \"\"\"\r\n    roman_numerals = {\r\n        1000: 'm',\r\n        900: 'cm',\r\n        500: 'd',\r\n        400: 'cd',\r\n        100: 'c',\r\n        90: 'xc',\r\n        50: 'l',\r\n        40: 'xl',\r\n        10: 'x',\r\n        9: 'ix',\r\n        5: 'v',\r\n        4: 'iv',\r\n        1: 'i'\r\n    }\r\n\r\n    roman_num = ''\r\n    for value, numeral in roman_numerals.items():\r\n        while number >= value:\r\n            roman_num += numeral\r\n            number -= value\r\n\r\n    return roman_num.lower()\r\n```\r\n\r\nThe function `int_to_mini_roman` takes a positive integer `number` as input and returns its roman numeral equivalent as a string in lowercase. The function uses a dictionary `roman_numerals` to map each integer value to its corresponding roman numeral. The function iterates through the dictionary and adds the roman numeral to the output string `roman_num` as many times as necessary until the input number is reduced to zero. Finally, the function returns the lowercase roman numeral equivalent of the input number. "}
