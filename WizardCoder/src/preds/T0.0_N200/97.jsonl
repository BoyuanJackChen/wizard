{"task_id": "HumanEval/39", "completion": "Here's the Python script for the problem:\r\n\r\n\r\ndef is_prime(num: int) -> bool:\r\n    \"\"\"\r\n    is_prime returns True if the given number is prime, False otherwise.\r\n    \"\"\"\r\n    if num < 2:\r\n        return False\r\n    for i in range(2, int(num**0.5) + 1):\r\n        if num % i == 0:\r\n            return False\r\n    return True\r\n\r\n\r\ndef prime_fib(n: int) -> int:\r\n    \"\"\"\r\n    prime_fib returns n-th number that is a Fibonacci number and it's also prime.\r\n    \"\"\"\r\n    fib = [1, 1]\r\n    for i in range(2, n+1):\r\n        fib.append(fib[-1] + fib[-2])\r\n    for i in range(n-1, -1, -1):\r\n        if is_prime(fib[i]):\r\n            return fib[i]\r\n    return -1\r\n\r\n\r\n# Test cases\r\nprint(prime_fib(1))  # Output: 2\r\nprint(prime_fib(2))  # Output: 3\r\nprint(prime_fib(3))  # Output: 5\r\nprint(prime_fib(4))  # Output: 13\r\nprint(prime_fib(5))  # Output: 89 ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\n\ndef prime_fib(n: int):\n    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n\r\ndef is_prime(num: int) -> bool:\r\n    \"\"\"\r\n    is_prime returns True if the given number is prime, False otherwise.\r\n    \"\"\"\r\n    if num < 2:\r\n        return False\r\n    for i in range(2, int(num**0.5) + 1):\r\n        if num % i == 0:\r\n            return False\r\n    return True\r\n\r\n\r\ndef prime_fib(n: int) -> int:\r\n    \"\"\"\r\n    prime_fib returns n-th number that is a Fibonacci number and it's also prime.\r\n    \"\"\"\r\n    fib = [1, 1]\r\n    for i in range(2, n+1):\r\n        fib.append(fib[-1] + fib[-2])\r\n    for i in range(n-1, -1, -1):\r\n        if is_prime(fib[i]):\r\n            return fib[i]\r\n    return -1\r\n\r\n\r\n# Test cases\r\nprint(prime_fib(1))  # Output: 2\r\nprint(prime_fib(2))  # Output: 3\r\nprint(prime_fib(3))  # Output: 5\r\nprint(prime_fib(4))  # Output: 13\r\nprint(prime_fib(5))  # Output: 89 "}
