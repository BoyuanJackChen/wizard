{"task_id": "HumanEval/117", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef select_words(s, n):\r\n    \"\"\"Given a string s and a natural number n, you have been tasked to implement \r\n    a function that returns a list of all words from string s that contain exactly \r\n    n consonants, in order these words appear in the string s. \r\n    If the string s is empty then the function should return an empty list. \r\n    Note: you may assume the input string contains only letters and spaces. \r\n    Examples: \r\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"] \r\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"] \r\n    select_words(\"simple white space\", 2) ==> [] \r\n    select_words(\"Hello world\", 4) ==> [\"world\"] \r\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\r\n    \"\"\"\r\n    \r\n    # Split the string into words\r\n    words = s.split()\r\n    \r\n    # Initialize an empty list to store the selected words\r\n    selected_words = []\r\n    \r\n    # Loop through each word in the list of words\r\n    for word in words:\r\n        # Check if the word has exactly n consonants\r\n        if len([c for c in word if c.lower() not in \"aeiou\"]) == n:\r\n            # If it does, add it to the list of selected words\r\n            selected_words.append(word)\r\n    \r\n    # Return the list of selected words\r\n    return selected_words\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. The function takes in two parameters: `s` (the input string) and `n` (the number of consonants in each selected word).\r\n2. The function first splits the input string `s` into a list of words using the `split()` method.\r\n3. The function then initializes an empty list `selected_words` to store the selected words.\r\n4. The function loops through each word in the list of words and checks if it has exactly `n` consonants. To do this, the function uses a list comprehension to count the number of consonants in the word. It then checks if this count is equal to `n`.\r\n5. If a word has exactly `n` consonants, the function adds it to the list of selected words.\r\n6. Finally, the function returns the list of selected words. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef select_words(s, n):\n    \"\"\"Given a string s and a natural number n, you have been tasked to implement \n    a function that returns a list of all words from string s that contain exactly \n    n consonants, in order these words appear in the string s.\n    If the string s is empty then the function should return an empty list.\n    Note: you may assume the input string contains only letters and spaces.\n    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef select_words(s, n):\r\n    \"\"\"Given a string s and a natural number n, you have been tasked to implement \r\n    a function that returns a list of all words from string s that contain exactly \r\n    n consonants, in order these words appear in the string s. \r\n    If the string s is empty then the function should return an empty list. \r\n    Note: you may assume the input string contains only letters and spaces. \r\n    Examples: \r\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"] \r\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"] \r\n    select_words(\"simple white space\", 2) ==> [] \r\n    select_words(\"Hello world\", 4) ==> [\"world\"] \r\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\r\n    \"\"\"\r\n    \r\n    # Split the string into words\r\n    words = s.split()\r\n    \r\n    # Initialize an empty list to store the selected words\r\n    selected_words = []\r\n    \r\n    # Loop through each word in the list of words\r\n    for word in words:\r\n        # Check if the word has exactly n consonants\r\n        if len([c for c in word if c.lower() not in \"aeiou\"]) == n:\r\n            # If it does, add it to the list of selected words\r\n            selected_words.append(word)\r\n    \r\n    # Return the list of selected words\r\n    return selected_words\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. The function takes in two parameters: `s` (the input string) and `n` (the number of consonants in each selected word).\r\n2. The function first splits the input string `s` into a list of words using the `split()` method.\r\n3. The function then initializes an empty list `selected_words` to store the selected words.\r\n4. The function loops through each word in the list of words and checks if it has exactly `n` consonants. To do this, the function uses a list comprehension to count the number of consonants in the word. It then checks if this count is equal to `n`.\r\n5. If a word has exactly `n` consonants, the function adds it to the list of selected words.\r\n6. Finally, the function returns the list of selected words. "}
