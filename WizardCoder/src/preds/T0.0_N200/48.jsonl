{"task_id": "HumanEval/141", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef file_name_check(file_name):\r\n    \"\"\"Create a function which takes a string representing a file's name, and returns\r\n    'Yes' if the the file's name is valid, and returns 'No' otherwise. \r\n    A file's name is considered to be valid if and only if all the following conditions \r\n    are met:\r\n    - There should not be more than three digits ('0'-'9') in the file's name.\r\n    - The file's name contains exactly one dot '.'\r\n    - The substring before the dot should not be empty, and it starts with a letter from \r\n    the latin alphapet ('a'-'z' and 'A'-'Z').\r\n    - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\r\n    Examples:\r\n    file_name_check(\"example.txt\") # => 'Yes'\r\n    file_name_check(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter)\r\n    \"\"\"\r\n    \r\n    # Check if there are more than three digits in the file name\r\n    if sum(c.isdigit() for c in file_name) > 3:\r\n        return 'No'\r\n    \r\n    # Check if there is exactly one dot in the file name\r\n    if file_name.count('.') != 1:\r\n        return 'No'\r\n    \r\n    # Check if the substring before the dot starts with a letter from the latin alphapet\r\n    if not file_name.split('.')[0][0].isalpha():\r\n        return 'No'\r\n    \r\n    # Check if the substring after the dot is one of the allowed extensions\r\n    if file_name.split('.')[-1] not in ['txt', 'exe', 'dll']:\r\n        return 'No'\r\n    \r\n    return 'Yes'\r\n```\r\n\r\nHere are some examples of how to use the function:\r\n\r\n```python\r\nprint(file_name_check(\"example.txt\")) # => 'Yes'\r\nprint(file_name_check(\"1example.dll\")) # => 'No'\r\nprint(file_name_check(\"example.exe\")) # => 'Yes'\r\nprint(file_name_check(\"example.doc\")) # => 'No'\r\n``` ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef file_name_check(file_name):\n    \"\"\"Create a function which takes a string representing a file's name, and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n    A file's name is considered to be valid if and only if all the following conditions \n    are met:\n    - There should not be more than three digits ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot '.'\n    - The substring before the dot should not be empty, and it starts with a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n    file_name_check(\"example.txt\") # => 'Yes'\n    file_name_check(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter)\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef file_name_check(file_name):\r\n    \"\"\"Create a function which takes a string representing a file's name, and returns\r\n    'Yes' if the the file's name is valid, and returns 'No' otherwise. \r\n    A file's name is considered to be valid if and only if all the following conditions \r\n    are met:\r\n    - There should not be more than three digits ('0'-'9') in the file's name.\r\n    - The file's name contains exactly one dot '.'\r\n    - The substring before the dot should not be empty, and it starts with a letter from \r\n    the latin alphapet ('a'-'z' and 'A'-'Z').\r\n    - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\r\n    Examples:\r\n    file_name_check(\"example.txt\") # => 'Yes'\r\n    file_name_check(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter)\r\n    \"\"\"\r\n    \r\n    # Check if there are more than three digits in the file name\r\n    if sum(c.isdigit() for c in file_name) > 3:\r\n        return 'No'\r\n    \r\n    # Check if there is exactly one dot in the file name\r\n    if file_name.count('.') != 1:\r\n        return 'No'\r\n    \r\n    # Check if the substring before the dot starts with a letter from the latin alphapet\r\n    if not file_name.split('.')[0][0].isalpha():\r\n        return 'No'\r\n    \r\n    # Check if the substring after the dot is one of the allowed extensions\r\n    if file_name.split('.')[-1] not in ['txt', 'exe', 'dll']:\r\n        return 'No'\r\n    \r\n    return 'Yes'\r\n```\r\n\r\nHere are some examples of how to use the function:\r\n\r\n```python\r\nprint(file_name_check(\"example.txt\")) # => 'Yes'\r\nprint(file_name_check(\"1example.dll\")) # => 'No'\r\nprint(file_name_check(\"example.exe\")) # => 'Yes'\r\nprint(file_name_check(\"example.doc\")) # => 'No'\r\n``` "}
