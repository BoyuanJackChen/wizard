{"task_id": "HumanEval/78", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\ndef hex_key(num):\r\n    \"\"\"You have been tasked to write a function that receives \r\n    a hexadecimal number as a string and counts the number of hexadecimal \r\n    digits that are primes (prime number, or a prime, is a natural number \r\n    greater than 1 that is not a product of two smaller natural numbers).\r\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F. \r\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\r\n    So you have to determine a number of the following digits: 2, 3, 5, 7, \r\n    B (=decimal 11), D (=decimal 13).\r\n    Note: you may assume the input is always correct or empty string, \r\n    and symbols A,B,C,D,E,F are always uppercase.\r\n    Examples:\r\n    For num = \"AB\" the output should be 1.\r\n    For num = \"1077E\" the output should be 2.\r\n    For num = \"ABED1A33\" the output should be 4.\r\n    For num = \"123456789ABCDEF0\" the output should be 6.\r\n    For num = \"2020\" the output should be 2.\r\n    \"\"\"\r\n    \r\n    hex_digits = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, 'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15}\r\n    \r\n    count = 0\r\n    for digit in num:\r\n        if digit in hex_digits and hex_digits[digit] in [2, 3, 5, 7, 11, 13]:\r\n            count += 1\r\n    \r\n    return count\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. We define a dictionary `hex_digits` that maps each hexadecimal digit to its decimal value.\r\n2. We initialize a variable `count` to 0, which will keep track of the number of hexadecimal digits that are primes.\r\n3. We loop through each character `digit` in the input string `num`.\r\n4. If `digit` is a valid hexadecimal digit and its decimal value is in the set of primes, we increment `count` by 1.\r\n5. Finally, we return the value of `count`.\r\n\r\nNote that we use the `in` operator to check if a character is in the `hex_digits` dictionary. This is because the keys of the dictionary are the hexadecimal digits themselves, not their decimal values. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef hex_key(num):\n    \"\"\"You have been tasked to write a function that receives \n    a hexadecimal number as a string and counts the number of hexadecimal \n    digits that are primes (prime number, or a prime, is a natural number \n    greater than 1 that is not a product of two smaller natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11), D (=decimal 13).\n    Note: you may assume the input is always correct or empty string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n    For num = \"AB\" the output should be 1.\n    For num = \"1077E\" the output should be 2.\n    For num = \"ABED1A33\" the output should be 4.\n    For num = \"123456789ABCDEF0\" the output should be 6.\n    For num = \"2020\" the output should be 2.\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\ndef hex_key(num):\r\n    \"\"\"You have been tasked to write a function that receives \r\n    a hexadecimal number as a string and counts the number of hexadecimal \r\n    digits that are primes (prime number, or a prime, is a natural number \r\n    greater than 1 that is not a product of two smaller natural numbers).\r\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F. \r\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\r\n    So you have to determine a number of the following digits: 2, 3, 5, 7, \r\n    B (=decimal 11), D (=decimal 13).\r\n    Note: you may assume the input is always correct or empty string, \r\n    and symbols A,B,C,D,E,F are always uppercase.\r\n    Examples:\r\n    For num = \"AB\" the output should be 1.\r\n    For num = \"1077E\" the output should be 2.\r\n    For num = \"ABED1A33\" the output should be 4.\r\n    For num = \"123456789ABCDEF0\" the output should be 6.\r\n    For num = \"2020\" the output should be 2.\r\n    \"\"\"\r\n    \r\n    hex_digits = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, 'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15}\r\n    \r\n    count = 0\r\n    for digit in num:\r\n        if digit in hex_digits and hex_digits[digit] in [2, 3, 5, 7, 11, 13]:\r\n            count += 1\r\n    \r\n    return count\r\n```\r\n\r\nHere's how the function works:\r\n\r\n1. We define a dictionary `hex_digits` that maps each hexadecimal digit to its decimal value.\r\n2. We initialize a variable `count` to 0, which will keep track of the number of hexadecimal digits that are primes.\r\n3. We loop through each character `digit` in the input string `num`.\r\n4. If `digit` is a valid hexadecimal digit and its decimal value is in the set of primes, we increment `count` by 1.\r\n5. Finally, we return the value of `count`.\r\n\r\nNote that we use the `in` operator to check if a character is in the `hex_digits` dictionary. This is because the keys of the dictionary are the hexadecimal digits themselves, not their decimal values. "}
