{"task_id": "HumanEval/25", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom typing import List\r\n\r\ndef factorize(n: int) -> List[int]:\r\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\r\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\r\n    Input number should be equal to the product of all factors\r\n    >>> factorize(8)\r\n    [2, 2, 2]\r\n    >>> factorize(25)\r\n    [5, 5]\r\n    >>> factorize(70)\r\n    [2, 5, 7]\r\n    \"\"\"\r\n    factors = []\r\n    divisor = 2\r\n    while n > 1:\r\n        if n % divisor == 0:\r\n            factors.append(divisor)\r\n            n //= divisor\r\n        else:\r\n            divisor += 1\r\n    return factors\r\n```\r\n\r\nThe `factorize` function takes an integer `n` as input and returns a list of prime factors of `n`. It uses a while loop to divide `n` by the smallest prime factor `divisor` until `n` becomes 1. If `n` is divisible by `divisor`, it adds `divisor` to the `factors` list and updates `n` to `n // divisor`. If `n` is not divisible by `divisor`, it increments `divisor` by 1 and continues the loop. Finally, it returns the `factors` list. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nfrom typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom typing import List\r\n\r\ndef factorize(n: int) -> List[int]:\r\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\r\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\r\n    Input number should be equal to the product of all factors\r\n    >>> factorize(8)\r\n    [2, 2, 2]\r\n    >>> factorize(25)\r\n    [5, 5]\r\n    >>> factorize(70)\r\n    [2, 5, 7]\r\n    \"\"\"\r\n    factors = []\r\n    divisor = 2\r\n    while n > 1:\r\n        if n % divisor == 0:\r\n            factors.append(divisor)\r\n            n //= divisor\r\n        else:\r\n            divisor += 1\r\n    return factors\r\n```\r\n\r\nThe `factorize` function takes an integer `n` as input and returns a list of prime factors of `n`. It uses a while loop to divide `n` by the smallest prime factor `divisor` until `n` becomes 1. If `n` is divisible by `divisor`, it adds `divisor` to the `factors` list and updates `n` to `n // divisor`. If `n` is not divisible by `divisor`, it increments `divisor` by 1 and continues the loop. Finally, it returns the `factors` list. "}
