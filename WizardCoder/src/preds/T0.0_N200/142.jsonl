{"task_id": "HumanEval/8", "completion": "Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom typing import List, Tuple\r\n\r\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\r\n    \"\"\" For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\r\n    Empty sum should be equal to 0 and empty product should be equal to 1.\r\n    >>> sum_product([])\r\n    (0, 1)\r\n    >>> sum_product([1, 2, 3, 4])\r\n    (10, 24)\r\n    \"\"\"\r\n    if not numbers:\r\n        return 0, 1\r\n    else:\r\n        return sum(numbers), 1 if not numbers else 1 * reduce(lambda x, y: x * y, numbers)\r\n```\r\n\r\nThe `sum_product` function takes a list of integers as input and returns a tuple consisting of the sum and product of all the integers in the list. If the list is empty, the sum should be 0 and the product should be 1. The function uses the `sum` function to calculate the sum of the list and the `reduce` function to calculate the product of the list. If the list is empty, the function returns `(0, 1)` as specified in the problem statement. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nfrom typing import List, Tuple\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n    \"\"\" For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\n    Empty sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n    (0, 1)\n    >>> sum_product([1, 2, 3, 4])\n    (10, 24)\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n```python\r\nfrom typing import List, Tuple\r\n\r\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\r\n    \"\"\" For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\r\n    Empty sum should be equal to 0 and empty product should be equal to 1.\r\n    >>> sum_product([])\r\n    (0, 1)\r\n    >>> sum_product([1, 2, 3, 4])\r\n    (10, 24)\r\n    \"\"\"\r\n    if not numbers:\r\n        return 0, 1\r\n    else:\r\n        return sum(numbers), 1 if not numbers else 1 * reduce(lambda x, y: x * y, numbers)\r\n```\r\n\r\nThe `sum_product` function takes a list of integers as input and returns a tuple consisting of the sum and product of all the integers in the list. If the list is empty, the sum should be 0 and the product should be 1. The function uses the `sum` function to calculate the sum of the list and the `reduce` function to calculate the product of the list. If the list is empty, the function returns `(0, 1)` as specified in the problem statement. "}
