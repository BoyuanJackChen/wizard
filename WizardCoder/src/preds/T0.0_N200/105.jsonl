{"task_id": "HumanEval/46", "completion": "Here's the Python script for the given problem:\r\n\r\n\r\ndef fib4(n: int):\r\n    \"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\r\n    fib4(0) -> 0\r\n    fib4(1) -> 0\r\n    fib4(2) -> 2\r\n    fib4(3) -> 0\r\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\r\n    Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.\r\n    >>> fib4(5)\r\n    4\r\n    >>> fib4(6)\r\n    8\r\n    >>> fib4(7)\r\n    14\r\n    \"\"\"\r\n    if n == 0:\r\n        return 0\r\n    elif n == 1:\r\n        return 0\r\n    elif n == 2:\r\n        return 2\r\n    elif n == 3:\r\n        return 0\r\n    else:\r\n        a, b, c = 0, 0, 2\r\n        for i in range(4, n+1):\r\n            a, b, c = b, c, a + b + c\r\n        return c\r\n\r\n\r\n# Test cases\r\nprint(fib4(5))  # Output: 4\r\nprint(fib4(6))  # Output: 8\r\nprint(fib4(7))  # Output: 14 ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\n\ndef fib4(n: int):\n    \"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n    fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.\n    >>> fib4(5)\n    4\n    >>> fib4(6)\n    8\n    >>> fib4(7)\n    14\n    \"\"\"\n\n\n### Response:Here's the Python script for the given problem:\r\n\r\n\r\ndef fib4(n: int):\r\n    \"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\r\n    fib4(0) -> 0\r\n    fib4(1) -> 0\r\n    fib4(2) -> 2\r\n    fib4(3) -> 0\r\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\r\n    Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.\r\n    >>> fib4(5)\r\n    4\r\n    >>> fib4(6)\r\n    8\r\n    >>> fib4(7)\r\n    14\r\n    \"\"\"\r\n    if n == 0:\r\n        return 0\r\n    elif n == 1:\r\n        return 0\r\n    elif n == 2:\r\n        return 2\r\n    elif n == 3:\r\n        return 0\r\n    else:\r\n        a, b, c = 0, 0, 2\r\n        for i in range(4, n+1):\r\n            a, b, c = b, c, a + b + c\r\n        return c\r\n\r\n\r\n# Test cases\r\nprint(fib4(5))  # Output: 4\r\nprint(fib4(6))  # Output: 8\r\nprint(fib4(7))  # Output: 14 "}
