{"task_id": "HumanEval/88", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef sort_array(array):\r\n    \"\"\"\r\n    Given an array of non-negative integers, return a copy of the given array after sorting,\r\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\r\n    or sort it in descending order if the sum( first index value, last index value) is even.\r\n\r\n    Note:\r\n    * don't change the given array.\r\n\r\n    Examples:\r\n    * sort_array([]) => []\r\n    * sort_array([5]) => [5]\r\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\r\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\r\n    \"\"\"\r\n    if len(array) <= 1:\r\n        return array\r\n    \r\n    first_index = 0\r\n    last_index = len(array) - 1\r\n    \r\n    if (array[first_index] + array[last_index]) % 2 == 0:\r\n        return sorted(array, reverse=True)\r\n    else:\r\n        return sorted(array)\r\n```\r\n\r\nThe function takes an array as input and returns a sorted copy of the array. If the length of the array is less than or equal to 1, the function simply returns the array as it is. Otherwise, it calculates the sum of the first and last index values and checks if it's odd or even. If it's even, the function sorts the array in descending order, otherwise, it sorts the array in ascending order. Finally, it returns the sorted array.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef sort_array(array):\r\n    \"\"\"\r\n    Given an array of non-negative integers, return a copy of the given array after sorting,\r\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\r\n    or sort it in descending order if the sum( first index value, last index value) is even.\r\n\r\n    Note:\r\n    * don't change the given array.\r\n\r\n    Examples:\r\n    * sort_array([]) => []\r\n    * sort_array([5]) => [5]\r\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\r\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\r\n    \"\"\"\r\n    if len(array) <= 1:\r\n        return array\r\n    \r\n    first_index = 0\r\n    last_index = len(array) - 1\r\n    \r\n    if (array[first_index] + array[last_index]) % 2 == 0:\r\n        return sorted(array, reverse=True)\r\n    else:\r\n        return sorted(array)\r\n```\r\n\r\nThe function takes an array as input and returns a sorted copy of the array. If the length of the array is less than or equal to 1, the function simply returns the array as it is. Otherwise, it calculates the sum of the first and last index values and checks if it's odd or even. If it's even, the function sorts the array in descending order, otherwise, it sorts the array in ascending order. Finally, it returns the sorted array."}
