{"task_id": "HumanEval/55", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef fib(n: int) -> int:\r\n    \"\"\"Return n-th Fibonacci number.\"\"\"\r\n    if n <= 1:\r\n        return n\r\n    else:\r\n        return fib(n-1) + fib(n-2)\r\n\r\nprint(fib(10)) # Output: 55\r\nprint(fib(1)) # Output: 1\r\nprint(fib(8)) # Output: 21\r\n```\r\n\r\nThe `fib()` function takes an integer `n` as input and returns the `n`-th Fibonacci number. The function uses recursion to calculate the Fibonacci number. If `n` is less than or equal to 1, the function returns `n` itself. Otherwise, it recursively calls itself with `n-1` and `n-2` as inputs and returns the sum of the two results.\r\n\r\nThe function is annotated with a return type of `int` to indicate that it returns an integer value. The function also includes a docstring that describes what the function does and how to use it.\r\n\r\nFinally, the function is tested with three different inputs and the output is printed to the console.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\n\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef fib(n: int) -> int:\r\n    \"\"\"Return n-th Fibonacci number.\"\"\"\r\n    if n <= 1:\r\n        return n\r\n    else:\r\n        return fib(n-1) + fib(n-2)\r\n\r\nprint(fib(10)) # Output: 55\r\nprint(fib(1)) # Output: 1\r\nprint(fib(8)) # Output: 21\r\n```\r\n\r\nThe `fib()` function takes an integer `n` as input and returns the `n`-th Fibonacci number. The function uses recursion to calculate the Fibonacci number. If `n` is less than or equal to 1, the function returns `n` itself. Otherwise, it recursively calls itself with `n-1` and `n-2` as inputs and returns the sum of the two results.\r\n\r\nThe function is annotated with a return type of `int` to indicate that it returns an integer value. The function also includes a docstring that describes what the function does and how to use it.\r\n\r\nFinally, the function is tested with three different inputs and the output is printed to the console."}
