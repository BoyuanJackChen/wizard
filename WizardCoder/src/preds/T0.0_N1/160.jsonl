{"task_id": "HumanEval/96", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef is_prime(n):\r\n    \"\"\"Return True if n is prime, False otherwise.\"\"\"\r\n    if n < 2:\r\n        return False\r\n    for i in range(2, int(n**0.5) + 1):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n\r\ndef count_up_to(n):\r\n    \"\"\"Implement a function that takes an non-negative integer and returns an array of the first n\r\n    integers that are prime numbers and less than n.\"\"\"\r\n    primes = []\r\n    for i in range(2, n):\r\n        if is_prime(i):\r\n            primes.append(i)\r\n            if len(primes) == n:\r\n                break\r\n    return primes\r\n```\r\n\r\nThe `is_prime` function checks if a given number is prime or not. It returns `True` if the number is prime, and `False` otherwise.\r\n\r\nThe `count_up_to` function takes an integer `n` as input and returns an array of the first `n` prime numbers that are less than `n`. It does this by iterating over all integers from 2 to `n-1`, and checking if each integer is prime using the `is_prime` function. If an integer is prime, it is added to the `primes` list. Once the length of the `primes` list equals `n`, the loop is terminated using the `break` statement. Finally, the `primes` list is returned.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef count_up_to(n):\n    \"\"\"Implement a function that takes an non-negative integer and returns an array of the first n\n    integers that are prime numbers and less than n.\n    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1) => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef is_prime(n):\r\n    \"\"\"Return True if n is prime, False otherwise.\"\"\"\r\n    if n < 2:\r\n        return False\r\n    for i in range(2, int(n**0.5) + 1):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n\r\ndef count_up_to(n):\r\n    \"\"\"Implement a function that takes an non-negative integer and returns an array of the first n\r\n    integers that are prime numbers and less than n.\"\"\"\r\n    primes = []\r\n    for i in range(2, n):\r\n        if is_prime(i):\r\n            primes.append(i)\r\n            if len(primes) == n:\r\n                break\r\n    return primes\r\n```\r\n\r\nThe `is_prime` function checks if a given number is prime or not. It returns `True` if the number is prime, and `False` otherwise.\r\n\r\nThe `count_up_to` function takes an integer `n` as input and returns an array of the first `n` prime numbers that are less than `n`. It does this by iterating over all integers from 2 to `n-1`, and checking if each integer is prime using the `is_prime` function. If an integer is prime, it is added to the `primes` list. Once the length of the `primes` list equals `n`, the loop is terminated using the `break` statement. Finally, the `primes` list is returned."}
