{"task_id": "HumanEval/104", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef unique_digits(x):\r\n    \"\"\"Given a list of positive integers x. return a sorted list of all \r\n    elements that hasn't any even digit.\r\n\r\n    Note: Returned list should be sorted in increasing order.\r\n    \r\n    For example:\r\n    >>> unique_digits([15, 33, 1422, 1])\r\n    [1, 15, 33]\r\n    >>> unique_digits([152, 323, 1422, 10])\r\n    []\r\n    \"\"\"\r\n    unique_list = []\r\n    for num in x:\r\n        if sum(int(digit) % 2 == 0 for digit in str(num)) == 0:\r\n            unique_list.append(num)\r\n    return sorted(unique_list)\r\n```\r\n\r\nThe function `unique_digits` takes a list of positive integers `x` as input and returns a sorted list of all elements that hasn't any even digit.\r\n\r\nThe function first initializes an empty list `unique_list` to store the unique elements. It then iterates through each element `num` in the input list `x`. For each element, it checks if the sum of the result of applying the lambda function `int(digit) % 2 == 0 for digit in str(num)` to each digit of the number is equal to zero. If it is, then the number has no even digit and is added to the `unique_list`.\r\n\r\nFinally, the function returns the sorted `unique_list`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef unique_digits(x):\n    \"\"\"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef unique_digits(x):\r\n    \"\"\"Given a list of positive integers x. return a sorted list of all \r\n    elements that hasn't any even digit.\r\n\r\n    Note: Returned list should be sorted in increasing order.\r\n    \r\n    For example:\r\n    >>> unique_digits([15, 33, 1422, 1])\r\n    [1, 15, 33]\r\n    >>> unique_digits([152, 323, 1422, 10])\r\n    []\r\n    \"\"\"\r\n    unique_list = []\r\n    for num in x:\r\n        if sum(int(digit) % 2 == 0 for digit in str(num)) == 0:\r\n            unique_list.append(num)\r\n    return sorted(unique_list)\r\n```\r\n\r\nThe function `unique_digits` takes a list of positive integers `x` as input and returns a sorted list of all elements that hasn't any even digit.\r\n\r\nThe function first initializes an empty list `unique_list` to store the unique elements. It then iterates through each element `num` in the input list `x`. For each element, it checks if the sum of the result of applying the lambda function `int(digit) % 2 == 0 for digit in str(num)` to each digit of the number is equal to zero. If it is, then the number has no even digit and is added to the `unique_list`.\r\n\r\nFinally, the function returns the sorted `unique_list`."}
