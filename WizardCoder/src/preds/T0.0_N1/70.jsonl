{"task_id": "HumanEval/161", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef solve(s):\r\n    \"\"\"You are given a string s.\r\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \r\n    otherwise keep it as it is.\r\n    If the string contains no letters, reverse the string.\r\n    The function should return the resulted string.\r\n    Examples\r\n    solve(\"1234\") = \"4321\"\r\n    solve(\"ab\") = \"AB\"\r\n    solve(\"#a@C\") = \"#A@c\"\r\n    \"\"\"\r\n    result = \"\"\r\n    for char in s:\r\n        if char.isalpha():\r\n            if char.islower():\r\n                result += char.upper()\r\n            else:\r\n                result += char.lower()\r\n        else:\r\n            result += char\r\n    if not any(char.isalpha() for char in s):\r\n        result = result[::-1]\r\n    return result\r\n```\r\n\r\nThe `solve()` function takes a string `s` as input and returns the resulted string. The function first initializes an empty string `result` to store the resulted string. Then, it loops through each character `char` in the input string `s`. If `char` is a letter, it checks if it is in lowercase or uppercase using the `islower()` and `isupper()` methods. If `char` is in lowercase, it converts it to uppercase using the `upper()` method and appends it to the `result` string. If `char` is in uppercase, it converts it to lowercase using the `lower()` method and appends it to the `result` string. If `char` is not a letter, it simply appends it to the `result` string. After the loop, the function checks if the input string `s` contains any letters using the `any()` function and the `isalpha()` method. If `s` contains no letters, it reverses the `result` string using slicing and returns it. Otherwise, it returns the `result` string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef solve(s):\r\n    \"\"\"You are given a string s.\r\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \r\n    otherwise keep it as it is.\r\n    If the string contains no letters, reverse the string.\r\n    The function should return the resulted string.\r\n    Examples\r\n    solve(\"1234\") = \"4321\"\r\n    solve(\"ab\") = \"AB\"\r\n    solve(\"#a@C\") = \"#A@c\"\r\n    \"\"\"\r\n    result = \"\"\r\n    for char in s:\r\n        if char.isalpha():\r\n            if char.islower():\r\n                result += char.upper()\r\n            else:\r\n                result += char.lower()\r\n        else:\r\n            result += char\r\n    if not any(char.isalpha() for char in s):\r\n        result = result[::-1]\r\n    return result\r\n```\r\n\r\nThe `solve()` function takes a string `s` as input and returns the resulted string. The function first initializes an empty string `result` to store the resulted string. Then, it loops through each character `char` in the input string `s`. If `char` is a letter, it checks if it is in lowercase or uppercase using the `islower()` and `isupper()` methods. If `char` is in lowercase, it converts it to uppercase using the `upper()` method and appends it to the `result` string. If `char` is in uppercase, it converts it to lowercase using the `lower()` method and appends it to the `result` string. If `char` is not a letter, it simply appends it to the `result` string. After the loop, the function checks if the input string `s` contains any letters using the `any()` function and the `isalpha()` method. If `s` contains no letters, it reverses the `result` string using slicing and returns it. Otherwise, it returns the `result` string."}
