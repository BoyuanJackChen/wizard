{"task_id": "HumanEval/36", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef fizz_buzz(n: int):\r\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\r\n    >>> fizz_buzz(50)\r\n    0\r\n    >>> fizz_buzz(78)\r\n    2\r\n    >>> fizz_buzz(79)\r\n    3\r\n    \"\"\"\r\n    count = 0\r\n    for i in range(1, n):\r\n        if i % 11 == 0 or i % 13 == 0:\r\n            if '7' in str(i):\r\n                count += 1\r\n    return count\r\n```\r\n\r\nThe function `fizz_buzz` takes an integer `n` as input and returns the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13.\r\n\r\nThe function first initializes a variable `count` to 0. It then loops through all integers from 1 to `n-1`. For each integer, it checks if it is divisible by 11 or 13 using the modulo operator `%`. If it is, it checks if the string representation of the integer contains the digit 7 using the `in` operator. If it does, it increments the `count` variable.\r\n\r\nFinally, the function returns the `count` variable, which represents the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13.\r\n\r\nThe function is tested using the `doctest` module, which allows us to write tests for our functions and automatically checks if they pass or fail.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\n\ndef fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef fizz_buzz(n: int):\r\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\r\n    >>> fizz_buzz(50)\r\n    0\r\n    >>> fizz_buzz(78)\r\n    2\r\n    >>> fizz_buzz(79)\r\n    3\r\n    \"\"\"\r\n    count = 0\r\n    for i in range(1, n):\r\n        if i % 11 == 0 or i % 13 == 0:\r\n            if '7' in str(i):\r\n                count += 1\r\n    return count\r\n```\r\n\r\nThe function `fizz_buzz` takes an integer `n` as input and returns the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13.\r\n\r\nThe function first initializes a variable `count` to 0. It then loops through all integers from 1 to `n-1`. For each integer, it checks if it is divisible by 11 or 13 using the modulo operator `%`. If it is, it checks if the string representation of the integer contains the digit 7 using the `in` operator. If it does, it increments the `count` variable.\r\n\r\nFinally, the function returns the `count` variable, which represents the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13.\r\n\r\nThe function is tested using the `doctest` module, which allows us to write tests for our functions and automatically checks if they pass or fail."}
