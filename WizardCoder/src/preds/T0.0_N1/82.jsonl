{"task_id": "HumanEval/25", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\nfrom typing import List\r\n\r\ndef factorize(n: int) -> List[int]:\r\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\r\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\r\n    Input number should be equal to the product of all factors\r\n    >>> factorize(8)\r\n    [2, 2, 2]\r\n    >>> factorize(25)\r\n    [5, 5]\r\n    >>> factorize(70)\r\n    [2, 5, 7]\r\n    \"\"\"\r\n    factors = []\r\n    i = 2\r\n    while i * i <= n:\r\n        if n % i:\r\n            i += 1\r\n        else:\r\n            n //= i\r\n            factors.append(i)\r\n    if n > 1:\r\n        factors.append(n)\r\n    return factors\r\n```\r\n\r\nThe `factorize` function takes an integer `n` as input and returns a list of prime factors of `n` in the order from smallest to largest. It uses a while loop to iterate over all possible factors of `n` (starting from 2) and checks if each factor is a divisor of `n`. If it is, it divides `n` by the factor and adds the factor to the list of factors. If it's not, it moves on to the next possible factor. Finally, if `n` is still greater than 1, it means that it's a prime factor and it's added to the list of factors. The function returns the list of factors.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nfrom typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\nfrom typing import List\r\n\r\ndef factorize(n: int) -> List[int]:\r\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\r\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\r\n    Input number should be equal to the product of all factors\r\n    >>> factorize(8)\r\n    [2, 2, 2]\r\n    >>> factorize(25)\r\n    [5, 5]\r\n    >>> factorize(70)\r\n    [2, 5, 7]\r\n    \"\"\"\r\n    factors = []\r\n    i = 2\r\n    while i * i <= n:\r\n        if n % i:\r\n            i += 1\r\n        else:\r\n            n //= i\r\n            factors.append(i)\r\n    if n > 1:\r\n        factors.append(n)\r\n    return factors\r\n```\r\n\r\nThe `factorize` function takes an integer `n` as input and returns a list of prime factors of `n` in the order from smallest to largest. It uses a while loop to iterate over all possible factors of `n` (starting from 2) and checks if each factor is a divisor of `n`. If it is, it divides `n` by the factor and adds the factor to the list of factors. If it's not, it moves on to the next possible factor. Finally, if `n` is still greater than 1, it means that it's a prime factor and it's added to the list of factors. The function returns the list of factors."}
