{"task_id": "HumanEval/89", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef encrypt(s):\r\n    \"\"\"Create a function encrypt that takes a string as an argument and\r\n    returns a string encrypted with the alphabet being rotated. \r\n    The alphabet should be rotated in a manner such that the letters \r\n    shift down by two multiplied to two places.\r\n    For example:\r\n    encrypt('hi') returns 'lm'\r\n    encrypt('asdfghjkl') returns 'ewhjklnop'\r\n    encrypt('gf') returns 'kj'\r\n    encrypt('et') returns 'ix'\r\n    \"\"\"\r\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n    rotated_alphabet = alphabet[2:] + alphabet[:2]\r\n    encrypted_string = ''\r\n    for char in s:\r\n        if char.isalpha():\r\n            index = alphabet.index(char.lower())\r\n            encrypted_char = rotated_alphabet[index]\r\n            if char.islower():\r\n                encrypted_string += encrypted_char\r\n            else:\r\n                encrypted_string += encrypted_char.upper()\r\n        else:\r\n            encrypted_string += char\r\n    return encrypted_string\r\n```\r\n\r\nThe `encrypt` function takes a string `s` as an argument and creates a new string `encrypted_string` to store the encrypted version of the input string. It then creates a new string `alphabet` that contains all the letters of the English alphabet in lowercase. It also creates a new string `rotated_alphabet` that contains the letters of the alphabet rotated down by two multiplied to two places.\r\n\r\nThe function then loops through each character in the input string `s`. If the character is a letter, it finds the index of the letter in the `alphabet` string using the `index` method. It then finds the corresponding letter in the `rotated_alphabet` string using the same index. If the original character was lowercase, it adds the encrypted character to the `encrypted_string` string. If the original character was uppercase, it adds the encrypted character in uppercase to the `encrypted_string` string. If the character is not a letter, it simply adds the character to the `encrypted_string` string as is.\r\n\r\nFinally, the function returns the `encrypted_string` string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef encrypt(s):\n    \"\"\"Create a function encrypt that takes a string as an argument and\n    returns a string encrypted with the alphabet being rotated. \n    The alphabet should be rotated in a manner such that the letters \n    shift down by two multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef encrypt(s):\r\n    \"\"\"Create a function encrypt that takes a string as an argument and\r\n    returns a string encrypted with the alphabet being rotated. \r\n    The alphabet should be rotated in a manner such that the letters \r\n    shift down by two multiplied to two places.\r\n    For example:\r\n    encrypt('hi') returns 'lm'\r\n    encrypt('asdfghjkl') returns 'ewhjklnop'\r\n    encrypt('gf') returns 'kj'\r\n    encrypt('et') returns 'ix'\r\n    \"\"\"\r\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n    rotated_alphabet = alphabet[2:] + alphabet[:2]\r\n    encrypted_string = ''\r\n    for char in s:\r\n        if char.isalpha():\r\n            index = alphabet.index(char.lower())\r\n            encrypted_char = rotated_alphabet[index]\r\n            if char.islower():\r\n                encrypted_string += encrypted_char\r\n            else:\r\n                encrypted_string += encrypted_char.upper()\r\n        else:\r\n            encrypted_string += char\r\n    return encrypted_string\r\n```\r\n\r\nThe `encrypt` function takes a string `s` as an argument and creates a new string `encrypted_string` to store the encrypted version of the input string. It then creates a new string `alphabet` that contains all the letters of the English alphabet in lowercase. It also creates a new string `rotated_alphabet` that contains the letters of the alphabet rotated down by two multiplied to two places.\r\n\r\nThe function then loops through each character in the input string `s`. If the character is a letter, it finds the index of the letter in the `alphabet` string using the `index` method. It then finds the corresponding letter in the `rotated_alphabet` string using the same index. If the original character was lowercase, it adds the encrypted character to the `encrypted_string` string. If the original character was uppercase, it adds the encrypted character in uppercase to the `encrypted_string` string. If the character is not a letter, it simply adds the character to the `encrypted_string` string as is.\r\n\r\nFinally, the function returns the `encrypted_string` string."}
