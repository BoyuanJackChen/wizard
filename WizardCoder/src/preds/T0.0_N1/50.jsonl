{"task_id": "HumanEval/143", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef is_prime(n):\r\n    \"\"\"\r\n    Helper function to check if a number is prime or not.\r\n    \"\"\"\r\n    if n < 2:\r\n        return False\r\n    for i in range(2, int(n**0.5) + 1):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n\r\ndef words_in_sentence(sentence):\r\n    \"\"\"\r\n    You are given a string representing a sentence,\r\n    the sentence contains some words separated by a space,\r\n    and you have to return a string that contains the words from the original sentence,\r\n    whose lengths are prime numbers,\r\n    the order of the words in the new string should be the same as the original one.\r\n    \"\"\"\r\n    words = sentence.split()\r\n    result = \"\"\r\n    for word in words:\r\n        if is_prime(len(word)):\r\n            result += word + \" \"\r\n    return result.strip()\r\n\r\n# Example usage:\r\nprint(words_in_sentence(\"This is a test\")) # Output: \"is\"\r\nprint(words_in_sentence(\"lets go for swimming\")) # Output: \"go for\"\r\n```\r\n\r\nThe `is_prime` function is a helper function that checks if a number is prime or not. It returns `True` if the number is prime, and `False` otherwise.\r\n\r\nThe `words_in_sentence` function takes a sentence as input, splits it into words using the `split` method, and then iterates over each word. For each word, it checks if its length is prime using the `is_prime` function. If the length is prime, it adds the word to the result string. Finally, it removes any extra whitespace from the result string using the `strip` method and returns it.\r\n\r\nThe example usage shows how to call the `words_in_sentence` function with different inputs and print the output.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef words_in_sentence(sentence):\n    \"\"\"\n    You are given a string representing a sentence,\n    the sentence contains some words separated by a space,\n    and you have to return a string that contains the words from the original sentence,\n    whose lengths are prime numbers,\n    the order of the words in the new string should be the same as the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1 <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef is_prime(n):\r\n    \"\"\"\r\n    Helper function to check if a number is prime or not.\r\n    \"\"\"\r\n    if n < 2:\r\n        return False\r\n    for i in range(2, int(n**0.5) + 1):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n\r\ndef words_in_sentence(sentence):\r\n    \"\"\"\r\n    You are given a string representing a sentence,\r\n    the sentence contains some words separated by a space,\r\n    and you have to return a string that contains the words from the original sentence,\r\n    whose lengths are prime numbers,\r\n    the order of the words in the new string should be the same as the original one.\r\n    \"\"\"\r\n    words = sentence.split()\r\n    result = \"\"\r\n    for word in words:\r\n        if is_prime(len(word)):\r\n            result += word + \" \"\r\n    return result.strip()\r\n\r\n# Example usage:\r\nprint(words_in_sentence(\"This is a test\")) # Output: \"is\"\r\nprint(words_in_sentence(\"lets go for swimming\")) # Output: \"go for\"\r\n```\r\n\r\nThe `is_prime` function is a helper function that checks if a number is prime or not. It returns `True` if the number is prime, and `False` otherwise.\r\n\r\nThe `words_in_sentence` function takes a sentence as input, splits it into words using the `split` method, and then iterates over each word. For each word, it checks if its length is prime using the `is_prime` function. If the length is prime, it adds the word to the result string. Finally, it removes any extra whitespace from the result string using the `strip` method and returns it.\r\n\r\nThe example usage shows how to call the `words_in_sentence` function with different inputs and print the output."}
