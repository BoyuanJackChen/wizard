{"task_id": "HumanEval/76", "completion": "Here's the Python script for the problem:\r\n\r\n```python\r\ndef is_simple_power(x, n):\r\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\r\n    power of n and false in other cases.\r\n    x is a simple power of n if n**int(log(x, n))=x\r\n    For example:\r\n    is_simple_power(1, 4) => true\r\n    is_simple_power(2, 2) => true\r\n    is_simple_power(8, 2) => true\r\n    is_simple_power(3, 2) => false\r\n    is_simple_power(3, 1) => false\r\n    is_simple_power(5, 3) => false\r\n    \"\"\"\r\n    if x == 1:\r\n        return False\r\n    elif x == n:\r\n        return True\r\n    else:\r\n        return n**int(round(log(x, n))) == x\r\n```\r\n\r\nThe function takes two arguments, `x` and `n`, and returns `True` if `x` is a simple power of `n` and `False` otherwise. The function first checks if `x` is equal to `1` or `n`, in which case it returns `False` or `True` respectively. If `x` is not equal to `1` or `n`, the function calculates the logarithm of `x` to the base `n` using the `log()` function from the `math` module. It then rounds this logarithm to the nearest integer using the `round()` function. Finally, it checks if `n` raised to this integer is equal to `x`. If it is, the function returns `True`, otherwise it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\n\ndef is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n\n\n### Response:Here's the Python script for the problem:\r\n\r\n```python\r\ndef is_simple_power(x, n):\r\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\r\n    power of n and false in other cases.\r\n    x is a simple power of n if n**int(log(x, n))=x\r\n    For example:\r\n    is_simple_power(1, 4) => true\r\n    is_simple_power(2, 2) => true\r\n    is_simple_power(8, 2) => true\r\n    is_simple_power(3, 2) => false\r\n    is_simple_power(3, 1) => false\r\n    is_simple_power(5, 3) => false\r\n    \"\"\"\r\n    if x == 1:\r\n        return False\r\n    elif x == n:\r\n        return True\r\n    else:\r\n        return n**int(round(log(x, n))) == x\r\n```\r\n\r\nThe function takes two arguments, `x` and `n`, and returns `True` if `x` is a simple power of `n` and `False` otherwise. The function first checks if `x` is equal to `1` or `n`, in which case it returns `False` or `True` respectively. If `x` is not equal to `1` or `n`, the function calculates the logarithm of `x` to the base `n` using the `log()` function from the `math` module. It then rounds this logarithm to the nearest integer using the `round()` function. Finally, it checks if `n` raised to this integer is equal to `x`. If it is, the function returns `True`, otherwise it returns `False`."}
